+ bash -x ./scripts/run_input_prediction.sh
+ tee input.log
+ models=("WizardLM/WizardCoder-15B-V1.0")
+ temperatures=(0.01)
+ (( i=0 ))
+ (( i<1 ))
+ model=WizardLM/WizardCoder-15B-V1.0
+ base_dir=WizardLM/WizardCoder-15B-V1.0
+ echo WizardLM/WizardCoder-15B-V1.0
WizardLM/WizardCoder-15B-V1.0
+ for temperature in "${temperatures[@]}"
+ dir=WizardLM/WizardCoder-15B-V1.0_temp0.01_input
+ dir=WizardLM/WizardCoder-15B-V1.0_temp0.01_input
+ SIZE=800
+ GPUS=2
+ echo WizardLM/WizardCoder-15B-V1.0_temp0.01_input
WizardLM/WizardCoder-15B-V1.0_temp0.01_input
+ mkdir -p model_generations_raw/WizardLM/WizardCoder-15B-V1.0_temp0.01_input
+ string='Starting iteration 0 with start and end  $(($i*SIZE/GPUS)) $(($ip*SIZE/GPUS))'
+ echo '$string'
$string
+ python3 main.py --model WizardLM/WizardCoder-15B-V1.0 --use_auth_token --trust_remote_code --tasks input_prediction --batch_size 10 --n_samples 1 --max_length_generation 1024 --precision bf16 --temperature 0.01 --save_generations --save_generations_path model_generations_raw/WizardLM/WizardCoder-15B-V1.0_temp0.01_input/shard_0.json --shuffle --tensor_parallel_size 2
WARNING 10-24 12:16:16 cuda.py:22] You are using a deprecated `pynvml` package. Please install `nvidia-ml-py` instead, and make sure to uninstall `pynvml`. When both of them are installed, `pynvml` will take precedence and cause errors. See https://pypi.org/project/pynvml for more information.
WARNING 10-24 12:16:18 config.py:1668] Casting torch.float16 to torch.bfloat16.
INFO 10-24 12:16:22 config.py:905] Defaulting to use mp for distributed inference
INFO 10-24 12:16:22 llm_engine.py:237] Initializing an LLM engine (v0.6.3.post1) with config: model='WizardLM/WizardCoder-15B-V1.0', speculative_config=None, tokenizer='WizardLM/WizardCoder-15B-V1.0', skip_tokenizer_init=False, tokenizer_mode=auto, revision=None, override_neuron_config=None, rope_scaling=None, rope_theta=None, tokenizer_revision=None, trust_remote_code=True, dtype=torch.bfloat16, max_seq_len=4096, download_dir=None, load_format=LoadFormat.AUTO, tensor_parallel_size=2, pipeline_parallel_size=1, disable_custom_all_reduce=False, quantization=None, enforce_eager=False, kv_cache_dtype=auto, quantization_param_path=None, device_config=cuda, decoding_config=DecodingConfig(guided_decoding_backend='outlines'), observability_config=ObservabilityConfig(otlp_traces_endpoint=None, collect_model_forward_time=False, collect_model_execute_time=False), seed=0, served_model_name=WizardLM/WizardCoder-15B-V1.0, num_scheduler_steps=1, chunked_prefill_enabled=False multi_step_stream_outputs=True, enable_prefix_caching=False, use_async_output_proc=True, use_cached_outputs=False, mm_processor_kwargs=None)
WARNING 10-24 12:16:23 multiproc_gpu_executor.py:53] Reducing Torch parallelism from 12 threads to 1 to avoid unnecessary CPU contention. Set OMP_NUM_THREADS in the external environment to tune this value as needed.
INFO 10-24 12:16:23 custom_cache_manager.py:17] Setting Triton cache manager to: vllm.triton_utils.custom_cache_manager:CustomCacheManager
[1;36m(VllmWorkerProcess pid=3961145)[0;0m INFO 10-24 12:16:23 multiproc_worker_utils.py:215] Worker ready; awaiting tasks
INFO 10-24 12:16:23 utils.py:1008] Found nccl from library libnccl.so.2
[1;36m(VllmWorkerProcess pid=3961145)[0;0m INFO 10-24 12:16:23 utils.py:1008] Found nccl from library libnccl.so.2
INFO 10-24 12:16:23 pynccl.py:63] vLLM is using nccl==2.20.5
[1;36m(VllmWorkerProcess pid=3961145)[0;0m INFO 10-24 12:16:23 pynccl.py:63] vLLM is using nccl==2.20.5
INFO 10-24 12:16:23 custom_all_reduce_utils.py:242] reading GPU P2P access cache from /home/yang/.cache/vllm/gpu_p2p_access_cache_for_0,1,2.json
[1;36m(VllmWorkerProcess pid=3961145)[0;0m INFO 10-24 12:16:23 custom_all_reduce_utils.py:242] reading GPU P2P access cache from /home/yang/.cache/vllm/gpu_p2p_access_cache_for_0,1,2.json
[1;36m(VllmWorkerProcess pid=3961145)[0;0m WARNING 10-24 12:16:23 custom_all_reduce.py:141] Custom allreduce is disabled because your platform lacks GPU P2P capability or P2P test failed. To silence this warning, specify disable_custom_all_reduce=True explicitly.
WARNING 10-24 12:16:23 custom_all_reduce.py:141] Custom allreduce is disabled because your platform lacks GPU P2P capability or P2P test failed. To silence this warning, specify disable_custom_all_reduce=True explicitly.
INFO 10-24 12:16:23 shm_broadcast.py:241] vLLM message queue communication handle: Handle(connect_ip='127.0.0.1', local_reader_ranks=[1], buffer=<vllm.distributed.device_communicators.shm_broadcast.ShmRingBuffer object at 0x737515b23a60>, local_subscribe_port=59287, remote_subscribe_port=None)
INFO 10-24 12:16:23 model_runner.py:1056] Starting to load model WizardLM/WizardCoder-15B-V1.0...
[1;36m(VllmWorkerProcess pid=3961145)[0;0m INFO 10-24 12:16:23 model_runner.py:1056] Starting to load model WizardLM/WizardCoder-15B-V1.0...
INFO 10-24 12:16:24 weight_utils.py:243] Using model weights format ['*.bin']
[1;36m(VllmWorkerProcess pid=3961145)[0;0m INFO 10-24 12:16:24 weight_utils.py:243] Using model weights format ['*.bin']
Loading pt checkpoint shards:   0% Completed | 0/1 [00:00<?, ?it/s]
/home/yang/.local/lib/python3.10/site-packages/vllm/model_executor/model_loader/weight_utils.py:425: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  state = torch.load(bin_file, map_location="cpu")
[1;36m(VllmWorkerProcess pid=3961145)[0;0m /home/yang/.local/lib/python3.10/site-packages/vllm/model_executor/model_loader/weight_utils.py:425: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
[1;36m(VllmWorkerProcess pid=3961145)[0;0m   state = torch.load(bin_file, map_location="cpu")
Loading pt checkpoint shards: 100% Completed | 1/1 [00:39<00:00, 39.62s/it]
Loading pt checkpoint shards: 100% Completed | 1/1 [00:39<00:00, 39.62s/it]

INFO 10-24 12:29:46 model_runner.py:1067] Loading model weights took 14.5980 GB
[1;36m(VllmWorkerProcess pid=3961145)[0;0m INFO 10-24 12:29:46 model_runner.py:1067] Loading model weights took 14.5980 GB
INFO 10-24 12:29:49 distributed_gpu_executor.py:57] # GPU blocks: 18219, # CPU blocks: 13107
INFO 10-24 12:29:49 distributed_gpu_executor.py:61] Maximum concurrency for 4096 tokens per request: 71.17x
[1;36m(VllmWorkerProcess pid=3961145)[0;0m INFO 10-24 12:29:51 model_runner.py:1395] Capturing the model for CUDA graphs. This may lead to unexpected consequences if the model is not static. To run the model in eager mode, set 'enforce_eager=True' or use '--enforce-eager' in the CLI.
[1;36m(VllmWorkerProcess pid=3961145)[0;0m INFO 10-24 12:29:51 model_runner.py:1399] CUDA graphs can take additional 1~3 GiB memory per GPU. If you are running out of memory, consider decreasing `gpu_memory_utilization` or enforcing eager mode. You can also reduce the `max_num_seqs` as needed to decrease memory usage.
INFO 10-24 12:29:51 model_runner.py:1395] Capturing the model for CUDA graphs. This may lead to unexpected consequences if the model is not static. To run the model in eager mode, set 'enforce_eager=True' or use '--enforce-eager' in the CLI.
INFO 10-24 12:29:51 model_runner.py:1399] CUDA graphs can take additional 1~3 GiB memory per GPU. If you are running out of memory, consider decreasing `gpu_memory_utilization` or enforcing eager mode. You can also reduce the `max_num_seqs` as needed to decrease memory usage.
INFO 10-24 12:30:11 model_runner.py:1523] Graph capturing finished in 20 secs.
[1;36m(VllmWorkerProcess pid=3961145)[0;0m INFO 10-24 12:30:11 model_runner.py:1523] Graph capturing finished in 20 secs.
  0%|          | 0/200 [00:00<?, ?it/s]  0%|          | 1/200 [00:02<08:55,  2.69s/it]  1%|          | 2/200 [00:03<05:12,  1.58s/it]  2%|▏         | 3/200 [00:05<05:48,  1.77s/it]  2%|▏         | 4/200 [00:07<05:49,  1.78s/it]  2%|▎         | 5/200 [00:08<04:54,  1.51s/it]  3%|▎         | 6/200 [00:09<04:05,  1.26s/it]  4%|▎         | 7/200 [00:09<03:39,  1.14s/it]  4%|▍         | 8/200 [00:11<03:48,  1.19s/it]  4%|▍         | 9/200 [00:12<03:30,  1.10s/it]  5%|▌         | 10/200 [00:14<04:32,  1.43s/it]  6%|▌         | 11/200 [00:15<03:54,  1.24s/it]  6%|▌         | 12/200 [00:16<03:42,  1.19s/it]  6%|▋         | 13/200 [00:17<03:39,  1.18s/it]  7%|▋         | 14/200 [00:18<03:19,  1.07s/it]  8%|▊         | 15/200 [00:19<03:09,  1.02s/it]  8%|▊         | 16/200 [00:20<03:00,  1.02it/s]  8%|▊         | 17/200 [00:20<02:41,  1.13it/s]  9%|▉         | 18/200 [00:21<02:38,  1.15it/s] 10%|▉         | 19/200 [00:22<02:36,  1.16it/s] 10%|█         | 20/200 [00:23<02:44,  1.10it/s] 10%|█         | 21/200 [00:25<03:56,  1.32s/it] 11%|█         | 22/200 [00:26<03:29,  1.18s/it] 12%|█▏        | 23/200 [00:27<03:13,  1.10s/it] 12%|█▏        | 24/200 [00:28<02:49,  1.04it/s] 12%|█▎        | 25/200 [00:28<02:36,  1.12it/s] 13%|█▎        | 26/200 [00:29<02:36,  1.11it/s] 14%|█▎        | 27/200 [00:30<02:32,  1.13it/s] 14%|█▍        | 28/200 [00:31<02:46,  1.04it/s] 14%|█▍        | 29/200 [00:32<02:38,  1.08it/s] 15%|█▌        | 30/200 [00:34<03:14,  1.14s/it] 16%|█▌        | 31/200 [00:59<23:47,  8.45s/it] 16%|█▌        | 32/200 [01:00<17:18,  6.18s/it] 16%|█▋        | 33/200 [01:01<12:48,  4.60s/it] 17%|█▋        | 34/200 [01:02<09:41,  3.50s/it] 18%|█▊        | 35/200 [01:03<07:20,  2.67s/it] 18%|█▊        | 36/200 [01:05<07:25,  2.72s/it] 18%|█▊        | 37/200 [01:08<07:06,  2.62s/it] 19%|█▉        | 38/200 [01:09<06:00,  2.23s/it] 20%|█▉        | 39/200 [01:10<04:58,  1.86s/it] 20%|██        | 40/200 [01:11<04:15,  1.60s/it] 20%|██        | 41/200 [01:12<03:42,  1.40s/it] 21%|██        | 42/200 [01:14<04:07,  1.57s/it] 22%|██▏       | 43/200 [01:16<04:16,  1.63s/it] 22%|██▏       | 44/200 [01:17<03:59,  1.54s/it] 22%|██▎       | 45/200 [01:19<04:14,  1.64s/it] 23%|██▎       | 46/200 [01:22<05:06,  1.99s/it] 24%|██▎       | 47/200 [01:23<04:33,  1.79s/it] 24%|██▍       | 48/200 [01:24<03:58,  1.57s/it] 24%|██▍       | 49/200 [01:27<04:32,  1.80s/it] 25%|██▌       | 50/200 [01:28<03:53,  1.56s/it] 26%|██▌       | 51/200 [01:29<03:51,  1.55s/it] 26%|██▌       | 52/200 [01:30<03:26,  1.39s/it] 26%|██▋       | 53/200 [01:31<03:05,  1.26s/it] 27%|██▋       | 54/200 [01:32<02:39,  1.09s/it] 28%|██▊       | 55/200 [01:33<02:43,  1.13s/it] 28%|██▊       | 56/200 [01:34<02:25,  1.01s/it] 28%|██▊       | 57/200 [01:36<03:28,  1.46s/it] 29%|██▉       | 58/200 [02:01<19:56,  8.42s/it] 30%|██▉       | 59/200 [02:03<15:04,  6.41s/it] 30%|███       | 60/200 [02:04<11:42,  5.01s/it] 30%|███       | 61/200 [02:05<08:49,  3.81s/it] 31%|███       | 62/200 [02:07<07:30,  3.26s/it] 32%|███▏      | 63/200 [02:09<06:10,  2.70s/it] 32%|███▏      | 64/200 [02:10<04:49,  2.13s/it] 32%|███▎      | 65/200 [02:10<03:57,  1.76s/it] 33%|███▎      | 66/200 [02:13<04:34,  2.04s/it] 34%|███▎      | 67/200 [02:14<03:41,  1.67s/it] 34%|███▍      | 68/200 [02:16<03:47,  1.72s/it] 34%|███▍      | 69/200 [02:17<03:33,  1.63s/it] 35%|███▌      | 70/200 [02:18<03:14,  1.49s/it] 36%|███▌      | 71/200 [02:44<18:40,  8.68s/it] 36%|███▌      | 72/200 [02:46<14:09,  6.63s/it] 36%|███▋      | 73/200 [02:47<10:39,  5.03s/it] 37%|███▋      | 74/200 [02:48<08:18,  3.96s/it] 38%|███▊      | 75/200 [02:49<06:13,  2.98s/it] 38%|███▊      | 76/200 [02:51<05:30,  2.66s/it] 38%|███▊      | 77/200 [02:52<04:38,  2.27s/it] 39%|███▉      | 78/200 [03:16<17:44,  8.73s/it] 40%|███▉      | 79/200 [03:19<14:06,  7.00s/it] 40%|████      | 80/200 [03:21<10:58,  5.49s/it] 40%|████      | 81/200 [03:23<08:50,  4.46s/it] 41%|████      | 82/200 [03:25<07:02,  3.58s/it] 42%|████▏     | 83/200 [03:26<05:32,  2.84s/it] 42%|████▏     | 84/200 [03:27<04:33,  2.35s/it] 42%|████▎     | 85/200 [03:28<03:35,  1.87s/it] 43%|████▎     | 86/200 [03:29<03:04,  1.62s/it] 44%|████▎     | 87/200 [03:30<02:51,  1.52s/it] 44%|████▍     | 88/200 [03:31<02:20,  1.25s/it] 44%|████▍     | 89/200 [03:32<02:30,  1.35s/it] 45%|████▌     | 90/200 [03:34<02:29,  1.36s/it] 46%|████▌     | 91/200 [03:35<02:15,  1.24s/it] 46%|████▌     | 92/200 [03:36<02:02,  1.14s/it] 46%|████▋     | 93/200 [03:37<02:19,  1.30s/it] 47%|████▋     | 94/200 [03:38<02:07,  1.20s/it] 48%|████▊     | 95/200 [03:41<02:44,  1.57s/it] 48%|████▊     | 96/200 [03:42<02:21,  1.36s/it] 48%|████▊     | 97/200 [03:42<02:02,  1.19s/it] 49%|████▉     | 98/200 [03:44<02:25,  1.43s/it] 50%|████▉     | 99/200 [03:45<02:10,  1.29s/it] 50%|█████     | 100/200 [03:48<02:42,  1.63s/it] 50%|█████     | 101/200 [03:50<03:02,  1.85s/it] 51%|█████     | 102/200 [03:51<02:33,  1.57s/it] 52%|█████▏    | 103/200 [03:52<02:03,  1.28s/it] 52%|█████▏    | 104/200 [03:53<02:19,  1.46s/it] 52%|█████▎    | 105/200 [03:55<02:08,  1.35s/it] 53%|█████▎    | 106/200 [03:55<01:55,  1.22s/it] 54%|█████▎    | 107/200 [03:56<01:38,  1.06s/it] 54%|█████▍    | 108/200 [03:57<01:26,  1.06it/s] 55%|█████▍    | 109/200 [03:58<01:28,  1.03it/s] 55%|█████▌    | 110/200 [03:59<01:36,  1.07s/it] 56%|█████▌    | 111/200 [04:00<01:42,  1.15s/it] 56%|█████▌    | 112/200 [04:01<01:37,  1.10s/it] 56%|█████▋    | 113/200 [04:03<01:38,  1.13s/it] 57%|█████▋    | 114/200 [04:04<01:50,  1.29s/it] 57%|█████▊    | 115/200 [04:05<01:46,  1.25s/it] 58%|█████▊    | 116/200 [04:07<01:58,  1.41s/it] 58%|█████▊    | 117/200 [04:09<02:02,  1.47s/it] 59%|█████▉    | 118/200 [04:10<01:44,  1.27s/it] 60%|█████▉    | 119/200 [04:11<01:49,  1.36s/it] 60%|██████    | 120/200 [04:13<01:58,  1.48s/it] 60%|██████    | 121/200 [04:14<01:40,  1.27s/it] 61%|██████    | 122/200 [04:15<01:37,  1.25s/it] 62%|██████▏   | 123/200 [04:16<01:30,  1.18s/it] 62%|██████▏   | 124/200 [04:19<02:02,  1.62s/it] 62%|██████▎   | 125/200 [04:20<01:49,  1.45s/it] 63%|██████▎   | 126/200 [04:20<01:30,  1.22s/it] 64%|██████▎   | 127/200 [04:22<01:43,  1.42s/it] 64%|██████▍   | 128/200 [04:23<01:26,  1.20s/it] 64%|██████▍   | 129/200 [04:24<01:23,  1.17s/it] 65%|██████▌   | 130/200 [04:25<01:09,  1.00it/s] 66%|██████▌   | 131/200 [04:51<09:50,  8.56s/it] 66%|██████▌   | 132/200 [04:53<07:22,  6.51s/it] 66%|██████▋   | 133/200 [04:55<05:53,  5.28s/it] 67%|██████▋   | 134/200 [04:57<04:43,  4.29s/it] 68%|██████▊   | 135/200 [04:58<03:33,  3.28s/it] 68%|██████▊   | 136/200 [04:59<02:50,  2.66s/it] 68%|██████▊   | 137/200 [05:00<02:14,  2.14s/it] 69%|██████▉   | 138/200 [05:01<01:56,  1.88s/it] 70%|██████▉   | 139/200 [05:04<02:00,  1.98s/it] 70%|███████   | 140/200 [05:04<01:39,  1.66s/it] 70%|███████   | 141/200 [05:05<01:25,  1.44s/it] 71%|███████   | 142/200 [05:07<01:23,  1.44s/it] 72%|███████▏  | 143/200 [05:08<01:10,  1.24s/it] 72%|███████▏  | 144/200 [05:10<01:35,  1.70s/it] 72%|███████▎  | 145/200 [05:12<01:24,  1.54s/it] 73%|███████▎  | 146/200 [05:13<01:25,  1.58s/it] 74%|███████▎  | 147/200 [05:15<01:30,  1.71s/it] 74%|███████▍  | 148/200 [05:16<01:15,  1.45s/it] 74%|███████▍  | 149/200 [05:17<01:05,  1.29s/it] 75%|███████▌  | 150/200 [05:18<01:05,  1.32s/it] 76%|███████▌  | 151/200 [05:20<01:02,  1.27s/it] 76%|███████▌  | 152/200 [05:20<00:54,  1.14s/it] 76%|███████▋  | 153/200 [05:22<00:59,  1.26s/it] 77%|███████▋  | 154/200 [05:23<00:50,  1.09s/it] 78%|███████▊  | 155/200 [05:23<00:45,  1.01s/it] 78%|███████▊  | 156/200 [05:25<00:46,  1.06s/it] 78%|███████▊  | 157/200 [05:26<00:51,  1.20s/it] 79%|███████▉  | 158/200 [05:27<00:45,  1.09s/it] 80%|███████▉  | 159/200 [05:28<00:39,  1.04it/s] 80%|████████  | 160/200 [05:28<00:35,  1.13it/s] 80%|████████  | 161/200 [05:29<00:36,  1.07it/s] 81%|████████  | 162/200 [05:30<00:37,  1.02it/s] 82%|████████▏ | 163/200 [05:31<00:32,  1.14it/s] 82%|████████▏ | 164/200 [05:32<00:32,  1.11it/s] 82%|████████▎ | 165/200 [05:33<00:31,  1.10it/s] 83%|████████▎ | 166/200 [05:34<00:28,  1.20it/s] 84%|████████▎ | 167/200 [05:35<00:37,  1.14s/it] 84%|████████▍ | 168/200 [05:36<00:35,  1.10s/it] 84%|████████▍ | 169/200 [05:38<00:34,  1.12s/it] 85%|████████▌ | 170/200 [05:40<00:45,  1.51s/it] 86%|████████▌ | 171/200 [05:42<00:44,  1.55s/it] 86%|████████▌ | 172/200 [05:42<00:36,  1.30s/it] 86%|████████▋ | 173/200 [05:43<00:32,  1.21s/it] 87%|████████▋ | 174/200 [05:44<00:29,  1.12s/it] 88%|████████▊ | 175/200 [05:45<00:26,  1.06s/it] 88%|████████▊ | 176/200 [05:47<00:28,  1.18s/it] 88%|████████▊ | 177/200 [05:48<00:24,  1.07s/it] 89%|████████▉ | 178/200 [05:49<00:23,  1.07s/it] 90%|████████▉ | 179/200 [05:51<00:27,  1.32s/it] 90%|█████████ | 180/200 [05:51<00:23,  1.19s/it] 90%|█████████ | 181/200 [05:52<00:20,  1.09s/it] 91%|█████████ | 182/200 [05:54<00:22,  1.28s/it] 92%|█████████▏| 183/200 [05:55<00:21,  1.24s/it] 92%|█████████▏| 184/200 [05:56<00:17,  1.09s/it] 92%|█████████▎| 185/200 [05:57<00:15,  1.04s/it] 93%|█████████▎| 186/200 [05:58<00:14,  1.06s/it] 94%|█████████▎| 187/200 [06:00<00:16,  1.24s/it] 94%|█████████▍| 188/200 [06:01<00:14,  1.20s/it] 94%|█████████▍| 189/200 [06:02<00:12,  1.15s/it] 95%|█████████▌| 190/200 [06:03<00:11,  1.20s/it] 96%|█████████▌| 191/200 [06:04<00:09,  1.10s/it] 96%|█████████▌| 192/200 [06:05<00:09,  1.13s/it] 96%|█████████▋| 193/200 [06:06<00:08,  1.19s/it] 97%|█████████▋| 194/200 [06:08<00:08,  1.37s/it] 98%|█████████▊| 195/200 [06:10<00:08,  1.63s/it] 98%|█████████▊| 196/200 [06:12<00:06,  1.53s/it] 98%|█████████▊| 197/200 [06:12<00:03,  1.26s/it] 99%|█████████▉| 198/200 [06:13<00:02,  1.13s/it]100%|█████████▉| 199/200 [06:14<00:01,  1.11s/it]100%|██████████| 200/200 [06:16<00:00,  1.24s/it]100%|██████████| 200/200 [06:16<00:00,  1.88s/it]
defaultdict(<class 'list'>, {0: ['f([1, 1, 1, 1, 3, 3, 3, 3])', 'f([1, 1, 1, 1, 3, 3, 3, 3])', 'f([1, 1, 1, 1, 3, 3, 3, 3])', 'f([1, 1, 1, 1, 3, 3, 3, 3])', 'f([1, 1, 1, 1, 3, 3, 3, 3])', 'f([1, 1, 1, 1, 3, 3, 3, 3])', 'f([1, 1, 1, 1, 3, 3, 3, 3])', 'f([1, 1, 1, 1, 3, 3, 3, 3])', 'f([1, 1, 1, 1, 3, 3, 3, 3])', 'f([1, 1, 1, 1, 3, 3, 3, 3])'], 1: ["f('bc', 'k')", "f('bc', 'k')", "f('bc', 'k')", "f('bc', 'k')", "f('bc', 'k')", "f('bc', 'k')", "f('bc', 'k')", "f('bc', 'k')", "f('bc', 'k')", "f('bc', 'k')"], 2: ["f('1234567890', 'p', 'C')", "f('1234567890', 'p', 'C')", "f('1234567890', 'p', 'C')", "f('1234567890', 'p', 'C')", "f('1234567890', 'p', 'C')", "f('1234567890', 'p', 'C')", "f('1234567890', 'p', 'C')", "f('1234567890', 'p', 'C')", "f('1234567890', 'p', 'C')", "f('1234567890', 'p', 'C')"], 3: ["f({'apple': 2, 'banana': 3, 'orange': 4, 'pear': 1})", "f({'apple': 2, 'banana': 3, 'orange': 4, 'pear': 1})", "f({'apple': 2, 'banana': 3, 'orange': 4, 'pear': 1})", "f({'apple': 2, 'banana': 3, 'orange': 4, 'pear': 1})", "f({'apple': 2, 'banana': 3, 'orange': 4, 'pear': 1})", "f({'apple': 2, 'banana': 3, 'orange': 4, 'pear': 1})", "f({'apple': 2, 'banana': 3, 'orange': 4, 'pear': 1})", "f({'apple': 2, 'banana': 3, 'orange': 4, 'pear': 1})", "f({'apple': 2, 'banana': 3, 'orange': 4, 'pear': 1})", "f({'apple': 2, 'banana': 3, 'orange': 4, 'pear': 1})"], 4: ['f([1, 2, 3, 4, 5])', 'f([1, 2, 3, 4, 5])', 'f([1, 2, 3, 4, 5])', 'f([1, 2, 3, 4, 5])', 'f([1, 2, 3, 4, 5])', 'f([1, 2, 3, 4, 5])', 'f([1, 2, 3, 4, 5])', 'f([1, 2, 3, 4, 5])', 'f([1, 2, 3, 4, 5])', 'f([1, 2, 3, 4, 5])'], 5: ['f("Hello World!")', 'f("Hello World!")', 'f("Hello World!")', 'f("Hello World!")', 'f("Hello World!")', 'f("Hello World!")', 'f("Hello World!")', 'f("Hello World!")', 'f("Hello World!")', 'f("Hello World!")'], 6: ['f(["Alice", "Bob", "Charlie"])', 'f(["Alice", "Bob", "Charlie"])', 'f(["Alice", "Bob"])', 'f(["Alice", "Bob", "Charlie"])', 'f(["Alice", "Bob", "Charlie"])', 'f(["Alice", "Bob", "Charlie"])', 'f(["Alice", "Bob"])', 'f(["Alice", "Bob", "Charlie"])', 'f(["Alice", "Bob"])', 'f(["Alice", "Bob"])'], 7: ['f([1, 2, 2])', 'f([1, 2, 2])', 'f([1, 2, 2])', 'f([1, 2, 2])', 'f([1, 2, 2])', 'f([1, 2, 2])', 'f([1, 2, 2])', 'f([1, 2, 2])', 'f([1, 2, 2])', 'f([1, 2, 2])'], 8: ['f("umevo", "o")', 'f("umevo", "v")', 'f("umevo", "o")', 'f("umevo", "v")', 'f("umevo", "v")', 'f("umevo", "v")', 'f("umevo", "o")', 'f("umevo", "o")', 'f("umevo", "v")', 'f("umevo", "v")'], 9: ['f([5, 5, 2, 2, 7, 5, 2, 7])', 'f([5, 5, 2, 2, 7, 5, 2, 7])', 'f([5, 5, 2, 2, 7, 5, 2, 7])', 'f([5, 5, 2, 2, 7, 5, 2, 7])', 'f([5, 5, 2, 2, 7, 5, 2, 7])', 'f([5, 5, 2, 2, 7, 5, 2, 7])', 'f([5, 5, 2, 2, 7, 5, 2, 7])', 'f([5, 5, 2, 2, 7, 5, 2, 7])', 'f([5, 5, 2, 2, 7, 5, 2, 7])', 'f([5, 5, 2, 2, 7, 5, 2, 7])'], 10: ["f('hello world', 'ld')", "f('hello world', 'ld')", "f('hello world', 'ld')", "f('hello world', 'ld')", "f('hello world', 'ld')", "f('hello world', 'ld')", "f('hello world', 'ld')", "f('hello world', 'ld')", "f('hello world', 'ld')", "f('hello world', 'ld')"], 11: ['f("123")', 'f("123")', 'f("123")', 'f("123")', 'f("123")', 'f("123")', 'f("123")', 'f("123")', 'f("123")', 'f("123")'], 12: ['f([1, 2, 3, 4], 1)', 'f([1, 2, 3, 4], 1)', 'f([1, 2, 3, 4], 1)', 'f([1, 2, 3, 4, 5], 1)', 'f([1, 2, 3, 4], 1)', 'f([1, 2, 3, 4], 1)', 'f([1, 2, 3, 4], 1)', 'f([1, 2, 3, 4], 1)', 'f([1, 2, 3, 4, 5], 1)', 'f([1, 2, 3, 4, 5], 1)'], 13: ['f("816")', 'f("816")', 'f("816")', 'f("816")', 'f("abc123")', 'f("816")', 'f("816")', 'f("816")', 'f("816")', 'f("816")'], 14: ['f("12345abcde")', 'f("12345abcde")', 'f("12345abcde")', 'f("12345abcde")', 'f("12345abcde")', 'f("12345abcde")', 'f("12345abcde")', 'f("12345abcde")', 'f("12345abcde")', 'f("12345abcde")'], 15: ['f("banana", 1, 4)', 'f("banana", 1, 4)', 'f("banana", 1, 4)', 'f("banana", 1, 4)', 'f("banana", 1, 4)', 'f("banana", 1, 4)', 'f("banana", 1, 4)', 'f("banana", 1, 4)', 'f("banana", 1, 4)', 'f("banana", 1, 4)'], 16: ['f("Hello, world!")', 'f("Hello, world!")', 'f("Hello, world!")', 'f("Hello, world!")', 'f("Hello, world!")', 'f("Hello, world!")', 'f("Hello, world!")', 'f("Hello, world!")', 'f("Hello, world!")', 'f("Hello, world!")'], 17: ['f("hello", 7)', 'f("hello", 7)', 'f("hello", 7)', 'f("hello", 7)', 'f("hello", 7)', 'f("hello", 7)', 'f("hello", 7)', 'f("hello", 7)', 'f("hello", 7)', 'f("hello", 7)'], 18: ['f("banana", "ba")', 'f("banana", "ba")', 'f("banana", "ba")', 'f("banana", "ba")', 'f("banana", "ba")', 'f("banana", "ba")', 'f("banana", "ba")', 'f("banana", "ba")', 'f("banana", "ba")', 'f("banana", "ba")'], 19: ['f(8, 6, 8)', 'f(8, 6, 8)', 'f(8, 6, 8)', 'f(8, 6, 8)', 'f(8, 6, 8)', 'f(8, 6, 8)', 'f(8, 6, 8)', 'f(8, 6, 8)', 'f(8, 6, 8)', 'f(8, 6, 8)'], 20: ['f([15, 24, 11, 63, 99], 3, 44)', 'f([15, 24, 11, 63, 99], 3, 44)', 'f([15, 24, 11, 63, 99], 3, 44)', 'f([15, 24, 11, 63, 99], 3, 44)', 'f([15, 24, 11, 63, 99], 3, 44)', 'f([15, 24, 11, 63, 99], 3, 44)', 'f([15, 24, 11, 63, 99], 3, 44)', 'f([15, 24, 11, 63, 99], 3, 44)', 'f([15, 24, 11, 63, 99], 3, 44)', 'f([15, 24, 11, 63, 99], 3, 44)'], 21: ['f("banana", "a")', 'f("banana", "a")', 'f("banana", "a")', 'f("banana", "a")', 'f("banana", "a")', 'f("banana", "a")', 'f("banana", "a")', 'f("banana", "a")', 'f("banana", "a")', 'f("banana", "a")'], 22: ['f(True, False, True, False)', 'f(True, False, True, False)', 'f(True, False, True, False)', 'f(True, False, True, False)', 'f(True, False, True, False)', 'f(True, False, True, False)', 'f(True, False, True, False)', 'f(True, False, True, False)', 'f(True, False, True, False)', 'f(True, False, True, False)'], 23: ["f('o')", "f('o')", "f('o')", "f('o')", "f('o')", "f('o')", "f('o')", "f('o')", "f('o')", "f('o')"], 24: ['f("Hello, world!")', 'f("Hello, world!")', 'f("Hello, world!")', 'f("こんにちは")', 'f("こんにちは")', 'f("こんにちは")', 'f("Hello, world!")', 'f("Hello, world!")', 'f("こんにちは")', 'f("Hello, world!")'], 25: ['f([1, 2, 3, 4])', 'f([1, 2, 3, 4])', 'f([1, 2, 3, 4])', 'f([1, 2, 3, 4])', 'f([1, 2, 3, 4])', 'f([1, 2, 3, 4])', 'f([1, 2, 3, 4])', 'f([1, 2, 3, 4])', 'f([1, 2, 3, 4])', 'f([1, 2, 3, 4])'], 26: ["f('AbCdEfGhIj')", "f('AbCdEfGhIj')", "f('AbCdEfGhIj')", "f('AbCdEfGhIj')", "f('AbCdEfGhIj')", "f('AbCdEfGhIj')", "f('AbCdEfGhIj')", "f('AbCdEfGhIj')", "f('AbCdEfGhIj')", "f('AbCdEfGhIj')"], 27: ['f([1, 2, 3, 4, 3, 5])', 'f([1, 2, 3, 4, 3, 5])', 'f([1, 2, 3, 4, 3, 5])', 'f([1, 2, 3, 4, 3, 5])', 'f([1, 2, 3, 4, 5])', 'f([1, 2, 3, 4, 3, 5])', 'f([1, 2, 3, 4, 3, 5])', 'f([1, 2, 3, 4, 5])', 'f([1, 2, 3, 4, 5])', 'f([1, 2, 3, 4, 5])'], 28: ["f('Hello World')", "f('Hello World')", "f('Hello World')", "f('Hello World')", "f('Hello World')", "f('Hello World')", "f('Hello World')", "f('Hello World')", "f('Hello World')", "f('Hello World')"], 29: ['f("1,2,3,4,5,1001,6,7,8,9,10")', 'f("1,2,3,4,5,1001,6,7,8,9")', 'f("1,2,3,4,5,1001,6,7,8,9,10")', 'f("1,2,3,4,5,1001,6,7,8,9,10")', 'f("1,2,3,4,5,1001,6,7,8,9")', 'f("1,2,3,4,5,1001,6,7,8,9,10")', 'f("1,2,3,4,5,1001,6,7,8,9")', 'f("1,2,3,4,5,1001,6,7,8,9,10")', 'f("1,2,3,4,5,1001,6,7,8,9")', 'f("1,2,3,4,5,1001,6,7,8,9")'], 30: ['f("kkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkx', 'f("kkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkx', 'f("kkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkx', 'f("kkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkx', 'f("kkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkx', 'f("kkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkx', 'f("kkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkx', 'f("kkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkx', 'f("kkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkx', 'f("kkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkxkkx'], 31: ['f("apple\\nbanana\\ncherry")', 'f("apple\\nbanana\\ncherry")', 'f("apple\\nbanana\\ncherry")', 'f("apple\\nbanana\\ncherry")', 'f("apple\\nbanana\\ncherry")', 'f("apple\\nbanana\\ncherry")', 'f("apple\\nbanana\\ncherry")', 'f("apple\\nbanana\\ncherry")', 'f("apple\\nbanana\\ncherry")', 'f("apple\\nbanana\\ncherry")'], 32: ['f("banana", "na")', 'f("banana", "na")', 'f("banana", "na")', 'f("banana", "na")', 'f("banana", "na")', 'f("banana", "na")', 'f("banana", "na")', 'f("banana", "na")', 'f("banana", "na")', 'f("banana", "na")'], 33: ['f(359)', 'f(359)', 'f(359)', 'f(359)', 'f(359)', 'f(359)', 'f(359)', 'f(359)', 'f(359)', 'f(359)'], 34: ['f("hi there")', 'f("hello")', 'f("hello")', 'f("hello")', 'f("hello")', 'f("hi there")', 'f("hi there")', 'f("hi there")', 'f("hello")', 'f("hello")'], 35: ['f([1, 2, 3, 2, 3, 1, 1, 2, 3, 1, 2])', 'f([1, 2, 3, 2, 1, 3, 2, 3, 1, 2, 1])', 'f([1, 2, 3, 2, 3, 1, 1, 2, 3, 1, 2])', 'f([1, 2, 3, 2, 3, 1, 1, 2, 3, 1, 2])', 'f([1, 2, 3, 2, 1, 3, 2, 1, 3, 2, 1])', 'f([1, 2, 3, 2, 1, 3, 2, 3, 1, 2, 3])', 'f([1, 2, 3, 2, 1, 3, 2, 3, 1, 2, 3])', 'f([1, 2, 3, 2, 3, 1, 1, 2, 3, 1, 2])', 'f([1, 2, 3, 2, 3, 1, 1, 2, 3, 1, 2])', 'f([1, 2, 3, 2, 3, 1, 1, 2, 3, 1, 2])'], 36: ['f([[3, 1, 4], [2, 5, 6], [7, 8, 9]])', 'f([[3, 1, 4], [2, 5, 6], [7, 8, 9]])', 'f([[3, 1, 4], [2, 5, 6], [7, 8, 9]])', 'f([[3, 1, 4], [2, 5, 6], [7, 8, 9]])', 'f([[3, 1, 4], [2, 5, 6], [7, 8, 9]])', 'f([[3, 1, 4], [2, 5, 6], [7, 8, 9]])', 'f([[3, 1, 4], [2, 5, 6], [7, 8, 9]])', 'f([[3, 1, 4], [2, 5, 6], [7, 8, 9]])', 'f([[3, 1, 4], [2, 5, 6], [7, 8, 9]])', 'f([[3, 1, 4], [2, 5, 6], [7, 8, 9]])'], 37: ['f([1, 1, 1, 1])', 'f([1, 1, 1, 1])', 'f([1, 1, 1, 1])', 'f([1, 1, 1, 1])', 'f([1, 1, 1, 1])', 'f([1, 1, 1, 1])', 'f([1, 1, 1, 1])', 'f([1, 1, 1, 1])', 'f([1, 1, 1, 1])', 'f([1, 1, 1, 1])'], 38: ['f("The quick brown fox jumps over the lazy dog.")', 'f("The quick brown fox jumps over the lazy dog.")', 'f("The quick brown fox jumps over the lazy dog.")', 'f("The quick brown fox jumps over the lazy dog.")', 'f("The quick brown fox jumps over the lazy dog.")', 'f("The quick brown fox jumps over the lazy dog.")', 'f("The quick brown fox jumps over the lazy dog.")', 'f("The quick brown fox jumps over the lazy dog.")', 'f("The quick brown fox jumps over the lazy dog.")', 'f("The quick brown fox jumps over the lazy dog.")'], 39: ['f("apple123", "123", 1)', 'f("apple123", "123", 1)', 'f("apple123", "123", 1)', 'f("apple123", "123", 1)', 'f("apple123", "123", 1)', 'f("apple123", "123", 1)', 'f("apple123", "123", 1)', 'f("apple123", "123", 1)', 'f("apple123", "123", 1)', 'f("apple123", "123", 1)'], 40: ['f("The number of zeros in this phrase is 1")', 'f("The number of zeros in this phrase is 1")', 'f("The number of zeros in this phrase is 1")', 'f("The quick brown fox jumps over the lazy dog")', 'f("The number of zeros in this phrase is 1")', 'f("The quick brown fox jumps over the lazy dog")', 'f("The number of zeros in this phrase is 1")', 'f("The quick brown fox jumps over the lazy dog")', 'f("The quick brown fox jumps over the lazy dog")', 'f("The number of zeros in this phrase is 1")'], 41: ['f([1, 2, 3, 4, 5, 6, -2, -4])', 'f([1, 2, 3, 4, 5, 6, -2, -4])', 'f([1, 2, 3, 4, 5, 6, -2, -4])', 'f([1, 2, 3, 4, 5, 6, -2, -4])', 'f([1, 2, 3, 4, 5, 6, -2, -4])', 'f([1, 2, 3, 4, 5, 6, -2, -4])', 'f([1, 2, 3, 4, 5, 6, -2, -4])', 'f([1, 2, 3, 4, 5, 6, -2, -4])', 'f([1, 2, 3, 4, 5, 6, -2, -4])', 'f([1, 2, 3, 4, 5, 6, -2, -4])'], 42: ['f({1: [2, 3], 2: [1, 3], 3: [1, 2]})', 'f({1: [2, 3], 2: [1, 3], 3: [1, 2]})', 'f({1: [2, 3], 2: [1, 3], 3: [1, 2]})', "f({'a': ['b', 'c'], 'b': ['a', 'd'], 'c': ['a', 'd'], 'd': ['b', 'c']})", 'f({1: [2, 3], 2: [1, 4], 3: [1, 4], 4: [2, 3]})', 'f({1: [2, 3], 2: [1, 4], 3: [1, 4], 4: [2, 3]})', "f({'a': ['b', 'c'], 'b': ['a', 'd'], 'c': ['a'], 'd': ['b']})", 'f({1: [2, 3], 2: [1, 3], 3: [1, 2]})', 'f({1: [2, 3], 2: [1, 3], 3: [1, 2]})', 'f({1: [2, 3], 2: [1, 4], 3: [1, 4], 4: [2, 3]})'], 43: ['f([1, 2, 3, 4, 5])', 'f([1, 2, 3, 4, 5])', 'f([1, 2, 3, 4, 5])', 'f([1, 2, 3, 4, 5])', 'f([1, 2, 3, 4, 5])', 'f([1, 2, 3, 4, 5])', 'f([1, 2, 3, 4, 5])', 'f([1, 2, 3, 4, 5])', 'f([1, 2, 3, 4, 5])', 'f([1, 2, 3, 4, 5])'], 44: ["f('hEllO wOrld')", "f('hEy dUde tHiS $nD^ &*&tHiS@#')", "f('hEy dUde tHiS $nD^ &*&tHiS@#')", "f('hEllO wOrld')", "f('hEy dUde tHiS $nD^ &*&tHiS@#')", "f('hEllO wOrld')", "f('hEy dUde tHiS $nD^ &*&tHiS@#')", "f('hEy dUde tHiS $nD^ &*&tHiS@#')", "f('hEy dUde tHiS $nD^ &*&tHiS@#')", "f('hEy dUde tHiS $nD^ &*&tHiS@#')"], 45: ['f([2, 0, 6, 2, 1, 7, 1, 2, 6, 0, 2])', 'f([2, 6, 1, 7, 0, 2])', 'f([2, 0, 6, 2, 1, 7, 1, 2, 6, 0, 2])', 'f([2, 0, 6, 2, 1, 7, 1, 2, 6, 0, 2])', 'f([2, 0, 6, 2, 1, 7, 1, 2, 6, 0, 2])', 'f([2, 6, 1, 7, 0, 2])', 'f([2, 0, 6, 2, 1, 7, 1, 2, 6, 0, 2])', 'f([2, 0, 6, 2, 1, 7, 1, 2, 6, 0, 2])', 'f([2, 0, 6, 2, 1, 7, 1, 2, 6, 0, 2])', 'f([2, 6, 1, 7, 0, 2])'], 46: ["f({'b': 1, 'a': 2})", "f({'b': 1, 'a': 2})", "f({'b': 1, 'a': 2})", "f({'b': 1, 'a': 2})", "f({'b': 1, 'a': 2})", "f({'b': 1, 'a': 2})", "f({'b': 1, 'a': 2})", "f({'b': 1, 'a': 2})", "f({'b': 1, 'a': 2})", "f({'b': 1, 'a': 2})"], 47: ["f('{{{0}}}', {'0': ['{', '}']})", "f('{{{0}}}', {'0': ['{', '}']})", "f('{{{0}}}', {'0': ['{', '}']})", "f('{{{0}}}', {'0': ['{', '}']})", "f('{{{0}}}', {'0': ['{', '}']})", "f('{{{0}}}', {'0': ['{', '}']})", "f('{{{0}}}', {'0': ['{', '}']})", "f('{{{0}}}', {'0': ['{', '}']})", "f('{{{0}}}', {'0': ['{', '}']})", "f('{{{0}}}', {'0': ['{', '}']})"], 48: ['f([[5, 6, 2, 3], [1, 9, 5, 6]], 1)', 'f([[5, 6, 2, 3], [1, 9, 5, 6]], 1)', 'f([[5, 6, 2, 3], [1, 9, 5, 6]], 1)', 'f([[5, 6, 2, 3], [1, 9, 5, 6]], 1)', 'f([[5, 6, 2, 3], [1, 9, 5, 6]], 1)', 'f([[5, 6, 2, 3], [1, 9, 5, 6]], 1)', 'f([[5, 6, 2, 3], [1, 9, 5, 6]], 1)', 'f([[5, 6, 2, 3], [1, 9, 5, 6]], 1)', 'f([[5, 6, 2, 3], [1, 9, 5, 6]], 1)', 'f([[5, 6, 2, 3], [1, 9, 5, 6]], 1)'], 49: ['f("The quick brown fox jumps over the lazy dog.")', 'f("The quick brown fox jumps over the lazy dog.")', 'f("The quick brown fox jumps over the lazy dog.")', 'f("The quick brown fox jumps over the lazy dog.")', 'f("The quick brown fox jumps over the lazy dog.")', 'f("The quick brown fox jumps over the lazy dog.")', 'f("The quick brown fox jumps over the lazy dog.")', 'f("The quick brown fox jumps over the lazy dog.")', 'f("The quick brown fox jumps over the lazy dog.")', 'f("The quick brown fox jumps over the lazy dog.")'], 50: ['f(10, 1234567890)', 'f(10, 1234567890)', 'f(10, 1234567890)', 'f(10, 1234567890)', 'f(10, 1234567890)', 'f(10, 1234567890)', 'f(10, 1234567890)', 'f(10, 1234567890)', 'f(10, 1234567890)', 'f(10, 1234567890)'], 51: ['f("123456")', 'f("123456")', 'f("123456")', 'f("123456")', 'f("123456")', 'f("123456")', 'f("123456")', 'f("123456")', 'f("123456")', 'f("123456")'], 52: ['f({"a": 1, "b": 2})', 'f({"a": 1, "b": 2})', 'f({"apple": 1, "banana": 2})', 'f({"apple": 1, "banana": 2})', 'f({"apple": 1, "banana": 2})', 'f({"apple": 1, "banana": 2})', 'f({"a": 1, "b": 2})', 'f({"a": 1, "b": 2})', 'f({"a": 1, "b": 2})', 'f({"a": 1, "b": 2})'], 53: ['f("hello world")', 'f("hello world")', 'f("hello world")', 'f("hello world")', 'f("hello world")', 'f("hello world")', 'f("hello world")', 'f("hello world")', 'f("hello world")', 'f("hello world")'], 54: ['f([1, 2, 4])', 'f([1, 2, 4])', 'f([1, 2, 4])', 'f([1, 2, 4])', 'f([1, 2, 4])', 'f([1, 2, 4])', 'f([1, 2, 4])', 'f([1, 2, 4])', 'f([1, 2, 4])', 'f([1, 2, 4])'], 55: ["f('manolo')", "f('manolo')", "f('manolo')", 'f("manolo")', "f('manolo')", 'f("manolo")', 'f("manolo")', "f('manolo')", "f('manolo')", 'f("manolo")'], 56: ["f({'A': 1, 'm': 9, 'k': 'L', '0': '1', 'L': '0'}, 'm')", "f({'A': 1, 'm': 9, 'k': 'L', '0': '1', 'L': '0'}, 9)", "f({'A': 1, '9': 0, 'm': 0, 'L': 1, 'k': 0}, 0)", "f({'A': 1, '9': 0, 'm': 0, 'L': 1, 'k': 0}, 0)", "f({'A': 1, 'm': 9, 'k': 'L', '0': '1', 'L': '0'}, 'm')", "f({'A': 1, 'm': 9, 'k': 'L', '0': '1', 'L': '0'}, 'm')", "f({'A': 1, 'm': 9, 'k': 'L', '0': '1', 'L': '0'}, 9)", "f({'A': 1, 'm': 9, 'k': 'L', '0': '1', 'L': '0'}, 9)", "f({'A': 1, '9': 0, 'm': 0, 'L': 1, 'k': 0}, 0)", "f({'A': 1, 'm': 9, 'k': 'L', '0': '1', 'L': '0'}, 'm')"], 57: ['f("hello", "abc")', 'f("hello", "abc")', 'f("hello", "12345")', 'f("hello", "abc")', 'f("hello", "12345")', 'f("hello", "abc")', 'f("hello", "12345")', 'f("hello", "12345")', 'f("hello", "abc")', 'f("hello", "12345")'], 58: ['f("Fruit")', 'f("Fruit")', 'f("Fruit")', 'f("Fruit")', 'f("Fruit")', 'f("Fruit")', 'f("Fruit")', 'f("Fruit")', 'f("Fruit")', 'f("Fruit")'], 59: ['f(thigh_o_one, 3, 2, 1)', 'f(thigh_o_one, 3, 2, 1)', 'f(thigh_o_one, 3, 2, 1)', 'f(thigh_o_one, 3, 2, 1)', 'f(thigh_o_one, 3, 2, 1)', 'f(thigh_o_one, 3, 2, 1)', 'f(thigh_o_one, 3, 2, 1)', 'f(thigh_o_one, 3, 2, 1)', 'f(thigh_o_one, 3, 2, 1)', 'f(thigh_o_one, 3, 2, 1)'], 60: ['f("Hello World")', 'f("Hello World")', 'f("Hello World")', 'f("Hello World")', 'f("Hello World")', 'f("Hello World")', 'f("Hello World")', 'f("Hello World")', 'f("Hello World")', 'f("Hello World")'], 61: ['f([1, 2, 3, 4, 5, 6], 2, 3)', 'f([1, 2, 3, 4, 5, 6], 2, 3)', 'f([1, 2, 3, 4, 5, 6], 2, 3)', 'f([1, 2, 3, 4, 5, 6], 2, 3)', 'f([1, 2, 3, 4, 5, 6], 2, 3)', 'f([1, 2, 3, 4, 5, 6], 2, 3)', 'f([1, 2, 3, 4, 5, 6], 2, 3)', 'f([1, 2, 3, 4, 5, 6], 2, 3)', 'f([1, 2, 3, 4, 5, 6], 2, 3)', 'f([1, 2, 3, 4, 5, 6], 2, 3)'], 62: ['f([3, 5, 4, 2, 6, 1, 5])', 'f([5, 3, 4, 2, 1])', 'f([5, 4, 3, 2, 1])', 'f([3, 5, 4, 2, 1])', 'f([3, 5, 4, 2, 6, 1, 5])', 'f([3, 5, 4, 2, 1])', 'f([3, 5, 4, 2, 1])', 'f([3, 5, 4, 2, 1])', 'f([3, 5, 4, 2, 1])', 'f([3, 5, 4, 2, 6, 1, 5])'], 63: ["f('pear')", "f('pear')", "f('pear')", "f('pear')", "f('pear')", "f('pear')", "f('pear')", "f('pear')", "f('pear')", "f('pear')"], 64: ['f([1, 2])', 'f([1, 2])', 'f([1, 2])', 'f([1, 2])', 'f([1, 2])', 'f([1, 2])', 'f([1, 2])', 'f([1, 2])', 'f([1, 2])', 'f([1, 2])'], 65: ['f({1: 2, 3: 4, 5: 6, 8: 2}, 8, 3)', 'f({1: 2, 3: 4, 5: 6, 8: 2}, 8, 3)', 'f({1: 2, 3: 4, 5: 6, 8: 2}, 8, 3)', 'f({1: 2, 3: 4, 5: 6, 8: 2}, 8, 3)', 'f({1: 2, 3: 4, 5: 6, 8: 2}, 8, 3)', 'f({1: 2, 3: 4, 5: 6, 8: 2}, 8, 3)', 'f({1: 2, 3: 4, 5: 6, 8: 2}, 8, 3)', 'f({1: 2, 3: 4, 5: 6, 8: 2}, 8, 3)', 'f({1: 2, 3: 4, 5: 6, 8: 2}, 8, 3)', 'f({1: 2, 3: 4, 5: 6, 8: 2}, 8, 3)'], 66: ['f("banana", "na")', 'f("banana", "na")', 'f("banana", "na")', 'f("banana", "na")', 'f("banana", "na")', 'f("banana", "na")', 'f("banana", "na")', 'f("banana", "na")', 'f("banana", "na")', 'f("banana", "na")'], 67: ["f({'Iron Man': 1, 'Hulk': 2, 'Thor': 3}, 'Iron Man')", "f({'Iron Man': 1, 'Hulk': 2, 'Thor': 3}, 'Iron Man')", "f({'Iron Man': 1, 'Hulk': 2, 'Thor': 3}, 'Hulk')", "f({'Iron Man': 'Tony Stark', 'Hulk': 'Bruce Banner', 'Thor': 'Thor'}, 'Hulk')", "f({'Iron Man': 1, 'Hulk': 2, 'Thor': 3}, 'Iron Man')", "f({'Iron Man': 'Tony Stark', 'Hulk': 'Bruce Banner', 'Thor': 'Thor'}, 'Iron Man')", "f({'Iron Man': 1, 'Hulk': 2, 'Thor': 3}, 'Hulk')", "f({'Iron Man': 1, 'Hulk': 2, 'Thor': 3}, 'Iron Man')", "f({'Iron Man': 1, 'Hulk': 2, 'Thor': 3}, 'Hulk')", "f({'Iron Man': 'Tony Stark', 'Hulk': 'Bruce Banner', 'Thor': 'Thor'}, 'Hulk')"], 68: ['f("Ahoy, Captain! We\'re making our way to the top of the world!", "o")', 'f("Ahoy, Captain! We\'re making our way to the top of the world!", "o")', 'f("Ahoy, Captain! We\'re making our way to the top of the world!", "o")', 'f("Ahoy, Captain! We\'re making our way to the top of the world!", "o")', 'f("Ahoy, Captain! We\'re making our way to the top of the world!", "o")', 'f("Ahoy, Captain! We\'re making our way to the top of the world!", "o")', 'f("Ahoy, Captain! We\'re making our way to the top of the world!", "o")', 'f("Ahoy, Captain! We\'re making our way to the top of the world!", "o")', 'f("Ahoy, Captain! We\'re making our way to the top of the world!", "o")', 'f("Ahoy, Captain! We\'re making our way to the top of the world!", "o")'], 69: ["f(['apple', 'banana', 'pear', 'pear'])", "f(['apple', 'banana', 'pear', 'pear'])", "f(['apple', 'banana', 'pear', 'pear'])", "f(['apple', 'banana', 'pear', 'pear'])", "f(['apple', 'banana', 'pear', 'pear'])", "f(['apple', 'banana', 'pear', 'pear'])", "f(['apple', 'banana', 'pear', 'pear'])", "f(['apple', 'banana', 'pear', 'pear'])", "f(['apple', 'banana', 'pear', 'pear'])", "f(['apple', 'banana', 'pear', 'pear'])"], 70: ["f('weeeddddneeelllneeeneennnnnnnnneeessssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss", "f('weeeddddneeelllneeeneennnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn", "f('weeeddddneeelllneeeneennnnnnnnneeessssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss", "f('weeeddddneeelllneeeneennnnnnnnneeess')", "f('weeeddddneeelllneeeneennnnnnnnneeessssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss", "f('weeeddddneeelllneeeneennnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn", "f('weeeddddneeelllneeeneennnnnnnnnnnee')", "f('weeeddddneeelllneeeneennnnnnnnneeessssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss", "f('weeeddddneeelllneeeneennnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn", "f('weeeddddneeelllneeeneennnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn"], 71: ['f(["La", "La", "Q", "9", "La"])', "f(['La', 'La', 'Q', '9', 'La'])", "f(['La', 'La', 'Q', '9', 'La'])", 'f(["La", "La", "Q", "9", "La", "Q", "9"])', "f(['La', 'La', 'Q', '9', 'La'])", 'f(["La", "La", "Q", "9", "La", "Q", "9"])', "f(['La', 'La', 'Q', '9', 'La'])", "f(['La', 'La', 'Q', '9', 'La'])", 'f(["La", "La", "Q", "9", "La", "Q", "9"])', 'f(["La", "La", "Q", "9", "La"])'], 72: ["f(['abc', 'def', 'ghi'])", "f(['abc', 'def', 'ghi'])", "f(['abc', 'def', 'ghi'])", "f(['abc', 'def', 'ghi'])", "f(['abc', 'def', 'ghi'])", "f(['abc', 'def', 'ghi'])", "f(['abc', 'def', 'ghi'])", "f(['abc', 'def', 'ghi'])", "f(['abc', 'def', 'ghi'])", "f(['abc', 'def', 'ghi'])"], 73: ['f("105, -90 244")', 'f("105, -90 244")', 'f("105, -90 244")', 'f("105, -90 244")', 'f("105, -90 244")', 'f("105, -90 244")', 'f("105, -90 244")', 'f("105, -90 244")', 'f("105, -90 244")', 'f("105, -90 244")'], 74: ["f('USA')", "f('USA')", "f('USA')", "f('USA')", "f('USA')", "f('USA')", "f('USA')", "f('USA')", "f('USA')", "f('USA')"], 75: ['f([1, 2, 3, 4, 5])', 'f([1, 2, 3, 4, 5])', 'f([1, 2, 3, 4, 5])', 'f([1, 2, 3, 4, 5])', 'f([1, 2, 3, 4, 5])', 'f([1, 2, 3, 4, 5])', 'f([1, 2, 3, 4, 5])', 'f([1, 2, 3, 4, 5])', 'f([1, 2, 3, 4, 5])', 'f([1, 2, 3, 4, 5])'], 76: ['f([3, 1, 7, 1])', 'f([3, 1, 7, 1])', 'f([3, 1, 7, 1])', 'f([3, 1, 7, 1])', 'f([3, 1, 7, 1])', 'f([3, 1, 7, 1])', 'f([3, 1, 7, 1])', 'f([3, 1, 7, 1])', 'f([3, 1, 7, 1])', 'f([3, 1, 7, 1])'], 77: ['f([1, 2, 3, 4, 5])', 'f([1, 2, 3, 4, 5])', 'f([1, 2, 3, 4, 5])', 'f([1, 2, 3, 4, 5])', 'f([1, 2, 3, 4, 5])', 'f([1, 2, 3, 4, 5])', 'f([1, 2, 3, 4, 5])', 'f([1, 2, 3, 4, 5])', 'f([1, 2, 3, 4, 5])', 'f([1, 2, 3, 4, 5])'], 78: ["f('nU00', ['9', 'rCSAz00w00', 'lpA5BO00sizL00i7rlVr'])", "f('nU00', ['9', 'rCSAz00w00', 'lpA5BO00sizL00i7rlVr'])", "f('nU00', ['9', 'rCSAz00w00', 'lpA5BO00sizL00i7rlVr'])", "f('nU00', ['9', 'rCSAz00w00', 'lpA5BO00sizL00i7rlVr'])", "f('nU00', ['9', 'rCSAz00w00', 'lpA5BO00sizL00i7rlVr'])", "f('nU00', ['9', 'rCSAz00w00', 'lpA5BO00sizL00i7rlVr'])", "f('nU00', ['9', 'rCSAz00w00', 'lpA5BO00sizL00i7rlVr'])", "f('nU00', ['9', 'rCSAz00w00', 'lpA5BO00sizL00i7rlVr'])", "f('nU00', ['9', 'rCSAz00w00', 'lpA5BO00sizL00i7rlVr'])", "f('nU00', ['9', 'rCSAz00w00', 'lpA5BO00sizL00i7rlVr'])"], 79: ["f({'a': 1, 'b': 2, 'c': 3, 'd': 2})", "f({'a': 1, 'b': 2, 'c': 3, 'd': 2})", "f({'a': 1, 'b': 2, 'c': 3, 'd': 2})", "f({'a': 1, 'b': 2, 'c': 3, 'd': 2})", "f({'a': 1, 'b': 2, 'c': 3, 'd': 2})", "f({'a': 1, 'b': 2, 'c': 3, 'd': 2})", "f({'a': 1, 'b': 2, 'c': 3, 'd': 2})", "f({'a': 1, 'b': 2, 'c': 3, 'd': 2})", "f({'a': 1, 'b': 2, 'c': 3, 'd': 2})", "f({'a': 1, 'b': 2, 'c': 3, 'd': 2})"], 80: ['f({"apple": 2, "banana": 3, "orange": 4, "pear": 1})', 'f({"apple": 2, "banana": 3, "orange": 4, "pear": 1})', 'f({"apple": 2, "banana": 3, "orange": 4, "pear": 1})', 'f({"apple": 2, "banana": 3, "orange": 4, "pear": 1})', 'f({"apple": 2, "banana": 3, "orange": 4, "pear": 1})', 'f({"apple": 2, "banana": 3, "orange": 4, "pear": 1})', 'f({"apple": 2, "banana": 3, "orange": 4, "pear": 1})', 'f({"apple": 2, "banana": 3, "orange": 4, "pear": 1})', 'f({"apple": 2, "banana": 3, "orange": 4, "pear": 1})', 'f({"apple": 2, "banana": 3, "orange": 4, "pear": 1})'], 81: ['f([[1, 2, 3]], [1, 2])', 'f([[1, 2, 3]], [1, 2])', 'f([[1, 2, 3]], [1, 2])', 'f([[1, 2, 3]], [1, 2])', 'f([[1, 2, 3]], [1, 2])', 'f([[1, 2, 3]], [1, 2])', 'f([[1, 2, 3]], [1, 2])', 'f([[1, 2, 3]], [1, 2])', 'f([[1, 2, 3]], [1, 2])', 'f([[1, 2, 3]], [1, 2])'], 82: ['f("R, {}!!!", [None, "R"])', 'f("R, {}!!!", [None, "R"])', 'f("R, {}!!!", [None, "R"])', 'f("R, {}!!!", [None, "R"])', 'f("R, {}!!!", [None, "R"])', 'f("R, {}!!!", [None, "R"])', 'f("R, {}!!!", [None, "R"])', 'f("R, {}!!!", [None, "R"])', 'f("R, {}!!!", [None, "R"])', 'f("R, {}!!!", [None, "R"])'], 83: ['f([1, 2], 2)', 'f([1, 2], 2)', 'f([1, 2], 2)', 'f([1, 2], 2)', 'f([1, 2], 2)', 'f([1, 2], 2)', 'f([1, 2], 2)', 'f([1, 2], 2)', 'f([1, 2], 2)', 'f([1, 2], 2)'], 84: ["f('hello')", "f('hello')", "f('hello')", "f('hello')", "f('hello')", "f('hello')", "f('hello')", "f('hello')", "f('hello')", "f('hello')"], 85: ['f("apple:banana:cherry#orange:kiwi")', 'f("apple:banana:cherry#orange:kiwi")', 'f("apple:banana:cherry#orange:kiwi")', 'f("apple:banana:cherry#orange:kiwi")', 'f("apple:banana:cherry#orange:kiwi")', 'f("apple:banana:cherry#orange:kiwi")', 'f("apple:banana:cherry#orange:kiwi")', 'f("apple:banana:cherry#orange:kiwi")', 'f("apple:banana:cherry#orange:kiwi")', 'f("apple:banana:cherry#orange:kiwi")'], 86: ["f('mRcwVqX', 'sRDRb')", "f('mRcwVqX', 'sRDRb')", "f('mRcw', 'VqXsRDRb')", "f('mRcwVqX', 'sRDRb')", "f('mRcwVqX', 'sRDRb')", "f('mRcwVqX', 'sRDRb')", "f('mRcw', 'VqXsRDRb')", "f('mRcwVqX', 'sRDRb')", "f('mRcwVqX', 'sRDRb')", "f('mRcw', 'VqXsRDRb')"], 87: ['f("hello world")', 'f("hello world")', 'f("hello world")', 'f("hello world")', 'f("hello")', 'f("hello")', 'f("hello")', 'f("hello")', 'f("hello")', 'f("hello world")'], 88: ["f(['apple', 'banana', 'cherry'], 3)", "f(['apple', 'banana', 'cherry'], 3)", "f(['apple', 'banana', 'cherry'], 3)", "f(['apple', 'banana', 'cherry'], 3)", "f(['apple', 'banana', 'cherry'], 3)", "f(['apple', 'banana', 'cherry'], 3)", "f(['apple', 'banana', 'cherry'], 3)", "f(['apple', 'banana', 'cherry'], 3)", "f(['apple', 'banana', 'cherry'], 3)", "f(['apple', 'banana', 'cherry'], 3)"], 89: ['f([1, 0, 2, 0, 3, 0, 4])', 'f([1, 0, 2, 0, 3, 0, 4, 0])', 'f([1, 0, 2, 0, 3, 0, 4])', 'f([1, 0, 2, 0, 3, 0, 4, 0])', 'f([1, 2, 0, 4, 5, 0, 7])', 'f([1, 0, 2, 0, 3, 0, 4, 0])', 'f([1, 2, 0, 4, 5, 0, 7])', 'f([1, 0, 2, 0, 3, 0, 4])', 'f([1, 2, 0, 4, 5, 0, 7])', 'f([1, 0, 2, 0, 3, 0, 4, 0])'], 90: ['f("19", 5)', 'f("19", 5)', 'f("19", 5)', 'f("19", 5)', 'f("19", 5)', 'f("19", 5)', 'f("19", 5)', 'f("19", 5)', 'f("19", 5)', 'f("19", 5)'], 91: ["f('hello world', 'lo')", "f('hello world', 'lo')", "f('hello world', 'lo')", "f('hello world', 'lo')", "f('hello world', 'lo')", "f('hello world', 'lo')", "f('hello world', 'lo')", "f('hello world', 'lo')", "f('hello world', 'lo')", "f('hello world', 'lo')"], 92: ["f(['1', '2', '3', '4', '5', '6', '7', '8', '9'])", "f(['1', '2', '3', '4', '5', '6', '7', '8'])", "f(['1', '2', '3', '4', '5', '6', '7', '8'])", "f(['1', '2', '3', '4', '5', '6', '7', '8', '9'])", "f(['1', '2', '3', '4', '5', '6', '7', '8'])", "f(['1', '2', '3', '4', '5', '6', '7', '8'])", "f(['1', '2', '3', '4', '5', '6', '7', '8', '9'])", "f(['1', '2', '3', '4', '5', '6', '7', '8'])", "f(['1', '2', '3', '4', '5', '6', '7', '8'])", "f(['1', '2', '3', '4', '5', '6', '7', '8', '9'])"], 93: ['f("0123456789")', 'f("0123456789")', 'f("0123456789")', 'f("0123456789")', 'f("0123456789")', 'f("0123456789")', 'f("0123456789")', 'f("0123456789")', 'f("0123456789")', 'f("0123456789")'], 94: ["f(['x', 'u', 'w', 'j', 3, 6])", "f(['x', 'u', 'w', 'j', 3, 6])", "f(['x', 'u', 'w', 'j', 3, 6])", "f(['x', 'u', 'w', 'j', 3, 6])", "f(['x', 'u', 'w', 'j', 3, 6])", "f(['x', 'u', 'w', 'j', 3, 6])", "f(['x', 'u', 'w', 'j', 3, 6])", "f(['x', 'u', 'w', 'j', 3, 6])", "f(['x', 'u', 'w', 'j', 3, 6])", "f(['x', 'u', 'w', 'j', 3, 6])"], 95: ["f('mathematics', 's')", "f('mathematics', 's')", "f('mathematics', 's')", "f('mathematics', 's')", "f('mathematics', 's')", "f('mathematics', 's')", "f('mathematics', 's')", "f('mathematics', 's')", "f('mathematics', 's')", "f('mathematics', 's')"], 96: ['f("banana", "na")', 'f("banana", "na")', 'f("banana", "na")', 'f("banana", "na")', 'f("banana", "na")', 'f("banana", "na")', 'f("banana", "na")', 'f("banana", "na")', 'f("banana", "na")', 'f("banana", "na")'], 97: ['f([4, 0, -4, 6, -7, 2, -1])', 'f([4, 0, -4, 6, -7, 2, -1])', 'f([4, 0, -4, 6, -7, 2, -1])', 'f([4, 0, -4, 6, -7, 2, -1])', 'f([4, 0, -4, 6, -7, 2, -1])', 'f([4, 0, -4, 6, -7, 2, -1])', 'f([4, 0, -4, 6, -7, 2, -1])', 'f([4, 0, -4, 6, -7, 2, -1])', 'f([4, 0, -4, 6, -7, 2, -1])', 'f([4, 0, -4, 6, -7, 2, -1])'], 98: ["f('querisT', 'q')", "f('querisT', 'q')", "f('querisT', 'q')", "f('querisT', 'q')", "f('querisT', 'q')", "f('querisT', 'q')", "f('querisT', 'q')", "f('querisT', 'q')", "f('querisT', 'q')", "f('querisT', 'q')"], 99: ['f([1, 3, -1, 1, -2, 6])', 'f([1, 3, -1, 1, -2, 6])', 'f([1, 3, -1, 1, -2, 6])', 'f([1, 3, -1, 1, -2, 6])', 'f([1, 3, -1, 1, -2, 6])', 'f([1, 3, -1, 1, -2, 6])', 'f([1, 3, -1, 1, -2, 6])', 'f([1, 3, -1, 1, -2, 6])', 'f([1, 3, -1, 1, -2, 6])', 'f([1, 3, -1, 1, -2, 6])'], 100: ["f('jysrhfm ojwesf xgwwdyr dlrul ymba bpq', 'l', 'x')", "f('jysrhfm ojwesf xgwwdyr dlrul ymba bpq', 'l', 'x')", "f('jysrhfm ojwesf xgwwdyr dlrul ymba bpq', 'r', 'z')", "f('jysrhfm ojwesf xgwwdyr dlrul ymba bpq', 'r', 'z')", "f('jysrhfm ojwesf xgwwdyr dlrul ymba bpq', 'r', 'z')", "f('jysrhfm ojwesf xgwwdyr dlrul ymba bpq', 'r', 'z')", "f('jysrhfm ojwesf xgwwdyr dlrul ymba bpq', 'r', 'z')", "f('jysrhfm ojwesf xgwwdyr dlrul ymba bpq', 'r', 'z')", "f('jysrhfm ojwesf xgwwdyr dlrul ymba bpq', 'l', 'x')", "f('jysrhfm ojwesf xgwwdyr dlrul ymba bpq', 'r', 'z')"], 101: ["f('mmfbanana', 'ana')", "f('mmfbanana', 'ana')", "f('mmfbanana', 'ana')", "f('mmfbanana', 'ana')", "f('mmfbanana', 'ana')", "f('mmfbanana', 'ana')", "f('mmfbanana', 'ana')", "f('mmfbanana', 'ana')", "f('mmfbanana', 'ana')", "f('mmfbanana', 'ana')"], 102: ['f("hello")', 'f("hello")', 'f("hello")', 'f("hello")', 'f("hello")', 'f("hello")', 'f("hello")', 'f("hello")', 'f("hello")', 'f("hello")'], 103: ['f([4, 2, 5, 1, 3, 2, 4])', 'f([4, 2, 5, 1, 3, 2, 4])', 'f([4, 2, 5, 1, 3, 2, 4])', 'f([4, 2, 5, 1, 3, 2, 4])', 'f([4, 2, 5, 1, 3, 2, 4])', 'f([4, 2, 5, 1, 3, 2, 4])', 'f([4, 2, 5, 1, 3, 2, 4])', 'f([4, 2, 5, 1, 3, 2, 4])', 'f([4, 2, 5, 1, 3, 2, 4])', 'f([4, 2, 5, 1, 3, 2, 4])'], 104: ['f([], 5, 0)', 'f([], 5, 0)', 'f([], 5, 0)', 'f([], 5, 0)', 'f([], 5, 0)', 'f([], 5, 0)', 'f([], 5, 0)', 'f([], 5, 0)', 'f([], 5, 0)', 'f([], 5, 0)'], 105: ['f("cos cify sue")', 'f("cos cify sue")', 'f("cos cify sue")', 'f("cos cify sue")', 'f("cos cify sue")', 'f("cos cify sue")', 'f("cos cify sue")', 'f("cos cify sue")', 'f("cos cify sue")', 'f("cos cify sue")'], 106: ['f("hello")', 'f("hello")', 'f("hello")', 'f("hello")', 'f("hello")', 'f("hello")', 'f("hello")', 'f("hello")', 'f("hello")', 'f("hello")'], 107: ['f("123")', 'f("123")', 'f("123")', 'f("123")', 'f("123")', 'f("123")', 'f("123")', 'f("123")', 'f("123")', 'f("123")'], 108: ['f({"a": 1, "b": 2}, 0)', 'f({"a": 1, "b": 2}, 0)', 'f({"a": 1, "b": 2}, 0)', 'f({"a": 1, "b": 2}, 0)', 'f({"a": 1, "b": 2}, 0)', 'f({"a": 1, "b": 2}, 0)', 'f({"a": 1, "b": 2}, 0)', 'f({"a": 1, "b": 2}, 0)', 'f({"a": 1, "b": 2}, 0)', 'f({"a": 1, "b": 2}, 0)'], 109: ['f([1, 2, 3, 4, 5])', 'f([1, 2, 3, 4, 5])', 'f([1, 2, 3, 4, 5])', 'f([1, 2, 3, 4, 5])', 'f([1, 2, 3, 4, 5])', 'f([1, 2, 3, 4, 5])', 'f([1, 2, 3, 4, 5])', 'f([1, 2, 3, 4, 5])', 'f([1, 2, 3, 4, 5])', 'f([1, 2, 3, 4, 5])'], 110: ["f('apple', 'aeiou', '12345')", "f('apple', 'aeiou', '12345')", "f('apple', 'aeiou', '12345')", "f('apple', 'aeiou', '12345')", "f('apple', 'aeiou', '12345')", "f('apple', 'aeiou', '12345')", "f('apple', 'aeiou', '12345')", "f('apple', 'aeiou', '12345')", "f('apple', 'aeiou', '12345')", "f('apple', 'aeiou', '12345')"], 111: ['f("GENERAL", 10)', 'f("GENERAL", 10)', 'f("GENERAL", 10)', 'f("GENERAL", 10)', 'f("GENERAL", 10)', 'f("GENERAL", 10)', 'f("GENERAL", 10)', 'f("GENERAL", 10)', 'f("GENERAL", 10)', 'f("GENERAL", 10)'], 112: ["f('unrnqdafi', 'nd', 2)", "f('unrnqdafi', 'nd', 2)", "f('unrnqdafi', 'nd', 2)", "f('unrnqdafi', 'nd', 2)", "f('unrnqdafi', 'nd', 2)", "f('unrnqdafi', 'nd', 2)", "f('unrnqdafi', 'nd', 2)", "f('unrnqdafi', 'nd', 2)", "f('unrnqdafi', 'nd', 2)", "f('unrnqdafi', 'nd', 2)"], 113: ['f([1, 2, 3, 4, 5], 2, 4)', 'f([1, 2, 3, 4, 5], 2, 4)', 'f([1, 2, 3, 4, 5], 2, 4)', 'f([1, 2, 3, 4, 5], 2, 4)', 'f([1, 2, 3, 4, 5], 2, 4)', 'f([1, 2, 3, 4, 5], 2, 4)', 'f([1, 2, 3, 4, 5], 2, 4)', 'f([1, 2, 3, 4, 5], 2, 4)', 'f([1, 2, 3, 4, 5], 2, 4)', 'f([1, 2, 3, 4, 5], 2, 4)'], 114: ["f('Cifysu is a good language', 'cifysu')", 'f("cifysuxyz", "xyz")', "f('Cifysu is a good language', 'cifysu')", 'f("Cifysu is a good programmer", "cifysu")', 'f("Cifysu is a good programmer", "cifysu")', "f('Cifysu is a good language', 'cifysu')", 'f("Cifysu is a good programmer", "cifysu")', 'f("cifysuxyz", "xyz")', "f('Cifysu is a good language', 'cifysu')", "f('Cifysu is a good language', 'cifysu')"], 115: ['f({-4: 4, 1: 2, -: -3})', 'f({-4: 4, 1: 2, -: -3})', 'f({-4: 4, 1: 2, -: -3})', 'f({-4: 4, 1: 2, -: -3})', 'f({-4: 4, 1: 2, -: -3})', 'f({-4: 4, 1: 2, -: -3})', 'f({-4: 4, 1: 2, -: -3})', 'f({-4: 4, 1: 2, -: -3})', 'f({-4: 4, 1: 2, -: -3})', 'f({-4: 4, 1: 2, -: -3})'], 116: ['f("a1234b5678c901då2345")', 'f("a1234b5678c901då2345")', 'f("a1234b5678c901då2345")', 'f("a1234b5678c901då2345")', 'f("a1234b5678c901då2345")', 'f("a1234b5678c901då2345")', 'f("a1234b5678c901då2345")', 'f("a1234b5678c901då2345")', 'f("a1234b5678c901då2345")', 'f("a1234b5678c901då2345")'], 117: ['f(44)', 'f(44)', 'f(44)', 'f(44)', 'f(44)', 'f(44)', 'f(44)', 'f(44)', 'f(44)', 'f(44)'], 118: ['f([1, 2, 3], 2, 2)', 'f([1, 2, 3], 2, 2)', 'f([1, 2, 3], 2, 2)', 'f([1, 2, 3], 2, 2)', 'f([1, 2, 3], 2, 2)', 'f([1, 2, 3], 2, 2)', 'f([1, 2, 3], 2, 2)', 'f([1, 2, 3], 2, 2)', 'f([1, 2, 3], 2, 2)', 'f([1, 2, 3], 2, 2)'], 119: ['f({1: "a", 2: "b", 3: "c"})', 'f({1: "a", 2: "b", 3: "c"})', 'f({1: "a", 2: "b", 3: "c"})', 'f({1: "a", 2: "b", 3: "c"})', 'f({1: "a", 2: "b", 3: "c"})', 'f({1: "a", 2: "b", 3: "c"})', 'f({1: "a", 2: "b", 3: "c"})', 'f({1: "a", 2: "b", 3: "c"})', 'f({1: "a", 2: "b", 3: "c"})', 'f({1: "a", 2: "b", 3: "c"})'], 120: ['f(5, 2)', 'f(5, 2)', 'f(5, 2)', 'f(5, 2)', 'f(5, 2)', 'f(5, 2)', 'f(5, 2)', 'f(5, 2)', 'f(5, 2)', 'f(5, 2)'], 121: ['f(["apple", "banana", "cherry", "date"], "b")', 'f(["apple", "banana", "cherry", "date"], "b")', 'f(["apple", "banana", "cherry", "date"], "b")', 'f(["apple", "banana", "cherry", "date"], "b")', 'f(["apple", "banana", "cherry", "date"], "b")', 'f(["apple", "banana", "cherry", "date"], "b")', 'f(["apple", "banana", "cherry", "date"], "b")', 'f(["apple", "banana", "cherry", "date"], "b")', 'f(["apple", "banana", "cherry", "date"], "b")', 'f(["apple", "banana", "cherry", "date"], "b")'], 122: ['f([1, 2, 3, 4, 5])', 'f([1, 2, 3])', 'f([1, 2, 3])', 'f([1, 2, 3])', 'f([1, 2, 3])', 'f([1, 2, 3])', 'f([1, 2, 3])', 'f([1, 2, 3])', 'f([1, 2, 3])', 'f([1, 2, 3, 4, 5])'], 123: ['f({1: "a", 2: "b", 3: "c", 4: "d", 5: "e"})', 'f({1: "a", 2: "b", 3: "c", 4: "d", 5: "e"})', 'f({1: "a", 2: "b", 3: "c", 4: "d", 5: "e"})', 'f({1: "a", 2: "b", 3: "c", 4: "d", 5: "e"})', 'f({1: "a", 2: "b", 3: "c", 4: "d", 5: "e"})', 'f({1: "a", 2: "b", 3: "c", 4: "d", 5: "e"})', 'f({1: "a", 2: "b", 3: "c", 4: "d", 5: "e"})', 'f({1: "a", 2: "b", 3: "c", 4: "d", 5: "e"})', 'f({1: "a", 2: "b", 3: "c", 4: "d", 5: "e"})', 'f({1: "a", 2: "b", 3: "c", 4: "d", 5: "e"})'], 124: ['f("rpg", "p", "g", 1)', 'f("rpg", "p", "g", 1)', 'f("rpg", "p", "g", 1)', 'f("rpg", "p", "g", 1)', 'f("rpg", "p", "g", 1)', 'f("rpg", "p", "g", 1)', 'f("rpg", "p", "g", 1)', 'f("rpg", "p", "g", 1)', 'f("rpg", "p", "g", 1)', 'f("rpg", "p", "g", 1)'], 125: ['f("hello world")', 'f("hello world")', 'f("hello world")', 'f("hello world")', 'f("hello world")', 'f("hello world")', 'f("hello world")', 'f("hello world")', 'f("hello world")', 'f("hello world")'], 126: ['f(2, [1, 2, 3])', 'f(2, [1, 2, 3])', 'f(2, [1, 2, 3])', 'f(2, [1, 2, 3])', 'f(2, [1, 2, 3])', 'f(2, [1, 2, 3])', 'f(2, [1, 2, 3])', 'f(2, [1, 2, 3])', 'f(2, [1, 2, 3])', 'f(2, [1, 2, 3])'], 127: ['f(1234)', 'f(1234)', 'f(1234)', 'f(123)', 'f(1234)', 'f(123)', 'f(123)', 'f(1234)', 'f(123)', 'f(123)'], 128: ['f("0574", 7)', 'f("0574", 7)', 'f("0574", 7)', 'f("0574", 7)', 'f("0574", 7)', 'f("0574", 7)', 'f("0574", 7)', 'f("0574", 7)', 'f("0574", 7)', 'f("0574", 7)'], 129: ['f("   ")', 'f("   ")', 'f("   ")', 'f("   ")', 'f("   ")', 'f("   ")', 'f("   ")', 'f("   ")', 'f("   ")', 'f("   ")'], 130: ["ffffffffff('&#33; &#33; &#33; &#33; &#33; &#33; &#33; &#33; &#33; &#33; &#33; &#33; &#33; &#33; &#33; &#33; &#33; &#33; &#33; &#33; &#33; &#33; &#33; &#33; &#33; &#33; &#33; &#33; &#33; &#33; &#33; &#33; &#33; &#33; &#33; &#33; &#33; &#33; &#33; &#33; &#33; &#33; &#33; &#33; &#33; &#33; &#33; &#33; &#33; &#33; &#33; &#33; &#33; &#33; &#33; &#33; &#33; &#33; &#33; &#33; &#33; &#33; &#33; &#33; &#33; &#33; &#33; &#33; &#33; &#33; &#33; &#33; &#33; &#33; &#33; &#33; &#33; &#33; &#33; &#33; &#33; &#33; &#33; &#33; &#33; &#33; &#33; &#33; &#33; &#33; &#33; &#33; &#33; &#33; &#33; &#33; &#33; &#33; &#33; &#33; &#33; &#33; &#33; &#33; &#33; &#33; &#33; &#33; &#33; &#33; &#33; &#33; &#33; &#33; &#33; &#33; &#33; &#33; &#33; &#33; &#33; &#33; &#33; &#33; &#33; &#33; &#33; &#33; &#33; &#33; &#33; &#33; &#33; &#33; &#33; &#33; &#33; &#33; &#33; &#33; &#33; &#33; &#33; &#33; &#33; &#33; &#33; &#33; &#33; &#33; &#33; &#33; &#33; &#33; &#33; &#33; &#33; &#33; &#33; &#33; &#33; &#33; &#33; &#33; &#33; &#33; &#33; &#33; &#33; &#33; &#33; &#33; &#33; &#33; &#33; &#33; &#33; &#33; &#3"], 131: ["f('Do you know who the other was? [NEGMENDS]', 'The other was ')", "f('Do you know who the other was? [NEGMENDS]', 'The other was ')", "f('Do you know who the other was? [NEGMENDS]', 'The other was ')", "f('Do you know who the other was? [NEGMENDS]', 'The other was ')", "f('Do you know who the other was? [NEGMENDS]', 'The other was ')", "f('Do you know who the other was? [NEGMENDS]', 'The other was ')", "f('Do you know who the other was? [NEGMENDS]', 'The other was ')", "f('Do you know who the other was? [NEGMENDS]', 'The other was ')", "f('Do you know who the other was? [NEGMENDS]', 'The other was ')", "f('Do you know who the other was? [NEGMENDS]', 'The other was ')"], 132: ['f([[1, 2, 3], [4, 5, 6], [7, 8, 9]])', 'f([[1, 2, 3], [4, 5, 6], [7, 8, 9]])', 'f([[1, 2, 3], [4, 5, 6], [7, 8, 9]])', 'f([[1, 2, 3], [4, 5, 6], [7, 8, 9]])', 'f([[1, 2, 3], [4, 5, 6], [7, 8, 9]])', 'f([[1, 2, 3], [4, 5, 6], [7, 8, 9]])', 'f([[1, 2, 3], [4, 5, 6], [7, 8, 9]])', 'f([[1, 2, 3], [4, 5, 6], [7, 8, 9]])', 'f([[1, 2, 3], [4, 5, 6], [7, 8, 9]])', 'f([[1, 2, 3], [4, 5, 6], [7, 8, 9]])'], 133: ['f([5, 3, 9999, 1, 0, 2])', 'f([5, 3, 9999, 1, 0, 2])', 'f([5, 3, 9999, 1, 0, 2])', 'f([5, 3, 9999, 1, 0, 2])', 'f([5, 3, 9999, 1, 0, 2])', 'f([5, 3, 9999, 1, 0, 2])', 'f([5, 3, 9999, 1, 0, 2])', 'f([5, 3, 9999, 1, 0, 2])', 'f([5, 3, 9999, 1, 0, 2])', 'f([5, 3, 9999, 1, 0, 2])'], 134: ["f('xxxarmmarxx')", "f('xxxarmmarxx')", "f('xxxarmmarxx')", "f('xxxarmmarxx')", "f('xxxarmmarxx')", "f('xxxarmmarxx')", "f('xxxarmmarxx')", "f('xxxarmmarxx')", "f('xxxarmmarxx')", "f('xxxarmmarxx')"], 135: ['f([1, 2], 1, 2)', 'f([1, 2], 1, 2)', 'f([1, 2], 1, 2)', 'f([1, 2], 1, 2)', 'f([1, 2], 1, 2)', 'f([1, 2], 1, 2)', 'f([1, 2], 1, 2)', 'f([1, 2], 1, 2)', 'f([1, 2], 1, 2)', 'f([1, 2], 1, 2)'], 136: ["f('a\\tb', 4)", "f('a\\tb', 4)", "f('a\\tb', 4)", "f('a\\tb', 4)", "f('a\\tb', 4)", "f('a\\tb', 4)", "f('a\\tb', 4)", "f('a\\tb', 4)", "f('a\\tb', 4)", "f('a\\tb', 4)"], 137: ['f([1, 2, 3])', 'f([1, 2, 3])', 'f([1, 2, 3])', 'f([1, 2, 3])', 'f([1, 2, 3])', 'f([1, 2, 3])', 'f([1, 2, 3])', 'f([1, 2, 3])', 'f([1, 2, 3])', 'f([1, 2, 3])'], 138: ["f({'R': 1, 'T': 3, 'F': 6, 'K': -2})", "f({'R': 1, 'T': 3, 'F': 6, 'K': -2})", "f({'R': 1, 'T': -3, 'F': 6, 'K': 0})", "f({'R': 1, 'T': -3, 'F': 6, 'K': 0})", "f({'R': 1, 'T': -3, 'F': 6, 'K': 0})", "f({'R': 1, 'T': 3, 'F': 6, 'K': -2})", "f({'R': 1, 'T': -3, 'F': 6, 'K': 0})", "f({'R': 1, 'T': -3, 'F': 6, 'K': 0})", "f({'R': 1, 'T': -3, 'F': 6, 'K': 0})", "f({'R': 1, 'T': -3, 'F': 6, 'K': 0})"], 139: ['f("banana", "a")', 'f("banana", "a")', 'f("banana", "a")', 'f("banana", "a")', 'f("banana", "a")', 'f("banana", "a")', 'f("banana", "a")', 'f("banana", "a")', 'f("banana", "a")', 'f("banana", "a")'], 140: ["f('hello', 'X')", "f('hello', 'X')", "f('hello', 'X')", 'f("hello", "Xoo")', 'f("hello", "Xoo")', "f('hello', 'X')", 'f("hello", "Xoo")', "f('hello', 'X')", 'f("hello", "Xoo")', "f('hello', 'X')"], 141: ['f(7, 5)', 'f(7, 5)', 'f(7, 5)', 'f(7, 5)', 'f(7, 5)', 'f(7, 5)', 'f(7, 5)', 'f(7, 5)', 'f(7, 5)', 'f(7, 5)'], 142: ['f("banana", "a")', 'f("banana", "a")', 'f("banana", "a")', 'f("banana", "a")', 'f("banana", "a")', 'f("banana", "a")', 'f("banana", "a")', 'f("banana", "a")', 'f("banana", "a")', 'f("banana", "a")'], 143: ['f([3, 4, 6, 7, 8, 9])', 'f([3, 4, 6, 7, 8, 9])', 'f([3, 4, 6, 7, 8, 9])', 'f([3, 4, 6, 7, 8, 9])', 'f([3, 4, 6, 7, 8, 9])', 'f([3, 4, 6, 7, 8, 9])', 'f([3, 4, 6, 7, 8, 9])', 'f([3, 4, 6, 7, 8, 9])', 'f([3, 4, 6, 7, 8, 9])', 'f([3, 4, 6, 7, 8, 9])'], 144: ['f([11, 3, 7, 5])', 'f([11, 3, 7, 5])', 'f([11, 3, 7, 5])', 'f([11, 3, 7, 5])', 'f([11, 3, 7, 5])', 'f([11, 3, 7, 5])', 'f([11, 3, 7, 5])', 'f([11, 3, 7, 5])', 'f([11, 3, 7, 5])', 'f([11, 3, 7, 5])'], 145: ['f([1, 2, 3, 4, 5], 2)', 'f([1, 2, 3, 4, 5], 2)', 'f([1, 2, 3, 4, 5], 2)', 'f([1, 2, 3, 4, 5], 2)', 'f([1, 2, 3, 4, 5], 2)', 'f([1, 2, 3, 4, 5], 2)', 'f([1, 2, 3, 4, 5], 2)', 'f([1, 2, 3, 4, 5], 2)', 'f([1, 2, 3, 4, 5], 2)', 'f([1, 2, 3, 4, 5], 2)'], 146: ["f('jaafodsfa sodofj aoafjis  jafasidfsa1')", "f('jaafodsfa sodofj aoafjis  jafasidfsa1')", "f('jaafodsfa sodofj aoafjis  jafasidfsa1')", "f('jaafodsfa sodofj aoafjis  jafasidfsa1')", "f('jaafodsfa sodofj aoafjis  jafasidfsa1')", "f('jaafodsfa sodofj aoafjis  jafasidfsa1')", "f('jaafodsfa sodofj aoafjis  jafasidfsa1')", "f('jaafodsfa sodofj aoafjis  jafasidfsa1')", "f('jaafodsfa sodofj aoafjis  jafasidfsa1')", "f('jaafodsfa sodofj aoafjis  jafasidfsa1')"], 147: ['f("hello world", 3)', 'f("hello world", 3)', 'f("hello world", 3)', 'f("hello world", 3)', 'f("hello world", 3)', 'f("hello world", 3)', 'f("hello world", 3)', 'f("hello world", 3)', 'f("hello world", 3)', 'f("hello world", 3)'], 148: ["f('hello')", "f('hello')", "f('hello')", "f('hello')", "f('hello')", "f('hello')", "f('hello')", "f('hello')", "f('hello')", "f('hello')"], 149: ['f("13:45:56", "utf-8")', 'f("13:45:56", "utf-8")', 'f("13:45:56", "utf-8")', 'f("13:45:56", "utf-8")', 'f("13:45:56", "utf-8")', 'f("13:45:56", "utf-8")', 'f("13:45:56", "utf-8")', 'f("13:45:56", "utf-8")', 'f("13:45:56", "utf-8")', 'f("13:45:56", "utf-8")'], 150: ["f('hello', ['@', '~', 'l', 'o'])", "f('hello', ['@', '~', 'l', 'o'])", "f('hello', ['@', '~', 'l', 'o'])", "f('hello', ['@', '~', 'l', 'o'])", "f('hello', ['@', '~', 'l', 'o'])", "f('hello', ['@', '~', 'l', 'o'])", "f('hello', ['@', '~', 'l', 'o'])", "f('hello', ['@', '~', 'l', 'o'])", "f('hello', ['@', '~', 'l', 'o'])", "f('hello', ['@', '~', 'l', 'o'])"], 151: ["f('hello', 'l')", "f('hello', 'l')", "f('hello', 'l')", "f('hello', 'l')", "f('hello', 'l')", "f('hello', 'l')", "f('hello', 'l')", "f('hello', 'l')", "f('hello', 'l')", "f('hello', 'l')"], 152: ['f([4, 3, 6, 1, 5], 5)', 'f([4, 3, 6, 1, 5], 5)', 'f([4, 3, 6, 1, 5], 5)', 'f([4, 3, 6, 1, 5], 5)', 'f([4, 3, 6, 1, 5], 5)', 'f([4, 3, 6, 1, 5], 5)', 'f([4, 3, 6, 1, 5], 5)', 'f([4, 3, 6, 1, 5], 5)', 'f([4, 3, 6, 1, 5], 5)', 'f([4, 3, 6, 1, 5], 5)'], 153: ['f("hello", 5)', 'f("hello", 5)', 'f("hello", 5)', 'f("hello", 5)', 'f("hello", 5)', 'f("hello", 5)', 'f("hello", 5)', 'f("hello", 5)', 'f("hello", 5)', 'f("hello", 5)'], 154: ["f('ababa', 'ba')", "f('ababa', 'ba')", "f('ababa', 'ba')", "f('ababa', 'ba')", "f('ababa', 'ba')", "f('ababa', 'ba')", "f('ababa', 'ba')", "f('ababa', 'ba')", "f('ababa', 'ba')", "f('ababa', 'ba')"], 155: ['f([1, 2, 3, 4, 5], 3)', 'f([1, 2, 3, 4, 5], 3)', 'f([1, 2, 3, 4, 5], 3)', 'f([1, 2, 3, 4, 5], 3)', 'f([1, 2, 3, 4, 5], 3)', 'f([1, 2, 3, 4, 5], 3)', 'f([1, 2, 3, 4, 5], 3)', 'f([1, 2, 3, 4, 5], 3)', 'f([1, 2, 3, 4, 5], 3)', 'f([1, 2, 3, 4, 5], 3)'], 156: ['f([1, 2, 3, 4, 5, 6], [2, 4, 6])', 'f([1, 2, 3, 4, 5, 6], [2, 4, 6])', 'f([1, 2, 3, 4, 5, 6], [2, 4, 6])', 'f([1, 2, 3, 4, 5, 6], [2, 4, 6])', 'f([1, 2, 3, 4, 5, 6], [2, 4, 6])', 'f([1, 2, 3, 4, 5, 6], [2, 4, 6])', 'f([1, 2, 3, 4, 5, 6], [2, 4, 6])', 'f([1, 2, 3, 4, 5, 6], [2, 4, 6])', 'f([1, 2, 3, 4, 5, 6], [2, 4, 6])', 'f([1, 2, 3, 4, 5, 6], [2, 4, 6])'], 157: ['f("banana", "ba")', 'f("banana", "ba")', 'f("banana", "ba")', 'f("banana", "ba")', 'f("banana", "ba")', 'f("banana", "ba")', 'f("banana", "ba")', 'f("banana", "ba")', 'f("banana", "ba")', 'f("banana", "ba")'], 158: ['f("3")', 'f("3")', 'f("3")', 'f("3")', 'f("3")', 'f("3")', 'f("3")', 'f("3")', 'f("3")', 'f("3")'], 159: ['f("abcde")', 'f("abcde")', 'f("abcde")', 'f("abcde")', 'f("abcde")', 'f("abcde")', 'f("abcde")', 'f("abcde")', 'f("abcde")', 'f("abcde")'], 160: ['f("Djhasghasgdha!")', 'f("Djhasghasgdha!")', 'f("Djhasghasgdha!")', 'f("Djhasghasgdha!")', 'f("Djhasghasgdha!")', 'f("Djhasghasgdha!")', 'f("Djhasghasgdha!")', 'f("Djhasghasgdha!")', 'f("Djhasghasgdha!")', 'f("Djhasghasgdha!")'], 161: ['f(["bot1", "BOT2", "bot3", "bot4"])', 'f(["bot1", "BOT2", "bot3", "bot4"])', 'f(["bot1", "BOT2", "bot3", "bot4"])', 'f(["bot1", "BOT2", "bot3", "bot4"])', 'f(["bot1", "BOT2", "bot3", "bot4"])', 'f(["bot1", "BOT2", "bot3", "bot4"])', 'f(["bot1", "BOT2", "bot3", "bot4"])', 'f(["bot1", "BOT2", "bot3", "bot4"])', 'f(["bot1", "BOT2", "bot3", "bot4"])', 'f(["bot1", "BOT2", "bot3", "bot4"])'], 162: ['f(3)', 'f(3)', 'f(3)', 'f(3)', 'f(3)', 'f(3)', 'f(3)', 'f(3)', 'f(3)', 'f(3)'], 163: ["f('hellomyfriend')", "f('hellomyfriend')", "f('hellomyfriend')", "f('hellomyfriend')", "f('hellomyfriend')", "f('hellomyfriend')", "f('hellomyfriend')", "f('hellomyfriend')", "f('hellomyfriend')", "f('hellomyfriend')"], 164: ["f('foo-bar-baz')", "f('foo-bar-baz')", "f('foo-bar-baz')", "f('foo-bar-baz')", "f('foo-bar-baz')", "f('foo-bar-baz')", "f('foo-bar-baz')", "f('foo-bar-baz')", "f('foo-bar-baz')", "f('foo-bar-baz')"], 165: ["f('Ca')", "f('Ca')", "f('Ca')", "f('Ca')", "f('Ca')", "f('Ca')", "f('Ca')", "f('Ca')", "f('Ca')", "f('Ca')"], 166: ['f([3, 1, 4, 1, 5, 9, 2, 6, 5, 3, 5], 1)', 'f([3, 1, 4, 1, 5, 9, 2, 6, 5, 3, 5], 1)', 'f([3, 1, 4, 1, 5, 9, 2, 6, 5, 3, 5], 1)', 'f([3, 1, 4, 1, 5, 9, 2, 6, 5, 3, 5], 1)', 'f([3, 1, 4, 1, 5, 9, 2, 6, 5, 3, 5], 1)', 'f([3, 1, 4, 1, 5, 9, 2, 6, 5, 3, 5], 1)', 'f([3, 1, 4, 1, 5, 9, 2, 6, 5, 3, 5], 1)', 'f([3, 1, 4, 1, 5, 9, 2, 6, 5, 3, 5], 1)', 'f([3, 1, 4, 1, 5, 9, 2, 6, 5, 3, 5], 1)', 'f([3, 1, 4, 1, 5, 9, 2, 6, 5, 3, 5], 1)'], 167: ['f("hello world", 2, 1)', "f('hello world', 2, 1)", "f('hello world', 2, 1)", 'f("hello world", 2, 2)', 'f("hello world", 2, 2)', "f('hello world', 2, 1)", 'f("hello world", 2, 2)', "f('hello world', 2, 2)", 'f("hello world", 2, 2)', 'f("hello world", 2, 2)'], 168: ['f([1, 2, 3, 2, 1], 2)', 'f([1, 2, 3, 2, 1], 2)', 'f([1, 2, 3, 2, 1], 2)', 'f([1, 2, 3, 2, 1], 2)', 'f([1, 2, 3, 2, 1], 2)', 'f([1, 2, 3, 2, 1], 2)', 'f([1, 2, 3, 2, 1], 2)', 'f([1, 2, 3, 2, 1], 2)', 'f([1, 2, 3, 2, 1], 2)', 'f([1, 2, 3, 2, 1], 2)'], 169: ['f([3, 1, 9, 0, 2, 8, 3, 1, 9, 0, 2, 8])', 'f([3, 1, 9, 0, 2, 8, 3, 1, 9, 0, 2, 8])', 'f([3, 1, 9, 0, 2, 8, 3, 1, 9, 0, 2, 8])', 'f([3, 1, 9, 0, 2, 8, 3, 1, 9, 0, 2, 8])', 'f([3, 1, 9, 0, 2, 8, 3, 1, 9, 0, 2, 8])', 'f([3, 1, 9, 0, 2, 8, 3, 1, 9, 0, 2, 8])', 'f([3, 1, 9, 0, 2, 8, 3, 1, 9, 0, 2, 8])', 'f([3, 1, 9, 0, 2, 8, 3, 1, 9, 0, 2, 8])', 'f([3, 1, 9, 0, 2, 8, 3, 1, 9, 0, 2, 8])', 'f([3, 1, 9, 0, 2, 8, 3, 1, 9, 0, 2, 8])'], 170: ["f({'a': 1, 'b': 2, 'c': 3})", "f({'a': 1, 'b': 2, 'c': 3})", "f({'a': 1, 'b': 2, 'c': 3})", "f({'a': 1, 'b': 2, 'c': 3})", "f({'a': 1, 'b': 2, 'c': 3})", "f({'a': 1, 'b': 2, 'c': 3})", "f({'a': 1, 'b': 2, 'c': 3})", "f({'a': 1, 'b': 2, 'c': 3})", "f({'a': 1, 'b': 2, 'c': 3})", "f({'a': 1, 'b': 2, 'c': 3})"], 171: ['f("abcabcabc")', 'f("abcabcabc")', 'f("abcabcabc")', 'f("banana")', 'f("abcabcabc")', 'f("abcabcabc")', 'f("banana")', 'f("banana")', 'f("abcabcabc")', 'f("banana")'], 172: ['f("I am a bot, and I am not a bot")', 'f("I am a bot, and I am not a bot")', 'f("I am a bot, and I am not a bot")', 'f("I am a bot, and I am not a bot")', 'f("I am a bot, and I am not a bot")', 'f("I am a bot, and I am not a bot")', 'f("I am a bot, and I am not a bot")', 'f("I am a bot, and I am not a bot")', 'f("I am a bot, and I am not a bot")', 'f("I am a bot, and I am not a bot")'], 173: ["f('udbs l', 3)", "f('udbs l', 3)", "f('udbs l', 3)", "f('udbs l', 3)", "f('udbs l', 3)", "f('udbs l', 3)", "f('udbs l', 3)", "f('udbs l', 3)", "f('udbs l', 3)", "f('udbs l', 3)"], 174: ['f("I loved a computer")', 'f("I loved a computer")', 'f("I loved a computer")', 'f("I loved a computer")', 'f("I loved a computer")', 'f("I loved a computer")', 'f("I loved a computer")', 'f("I loved a computer")', 'f("I loved a computer")', 'f("I loved a computer")'], 175: ["f({'aki': ['1', '5']}, 'aki', '2')", "f({'aki': ['1', '5']}, 'aki', '2')", "f({'aki': ['1', '5']}, 'aki', '2')", "f({'aki': ['1', '5']}, 'aki', '2')", "f({'aki': ['1', '5']}, 'aki', '2')", "f({'aki': ['1', '5']}, 'aki', '2')", "f({'aki': ['1', '5']}, 'aki', '2')", "f({'aki': ['1', '5']}, 'aki', '2')", "f({'aki': ['1', '5']}, 'aki', '2')", "f({'aki': ['1', '5']}, 'aki', '2')"], 176: ['f([1, 2, 3])', 'f([1, 2, 3])', 'f([1, 2, 3])', 'f([1, 2, 3])', 'f([1, 2, 3])', 'f([1, 2, 3])', 'f([1, 2, 3])', 'f([1, 2, 3])', 'f([1, 2, 3])', 'f([1, 2, 3])'], 177: ["f('ThisIsSoAtrocious')", "f('ThisIsSoAtrocious')", "f('ThisIsSoAtrocious')", "f('ThisIsSoAtrocious')", "f('ThisIsSoAtrocious')", "f('ThisIsSoAtrocious')", "f('ThisIsSoAtrocious')", "f('ThisIsSoAtrocious')", "f('ThisIsSoAtrocious')", "f('ThisIsSoAtrocious')"], 178: ["f('if (x) {y = 1;} else {z = 1;}')", "f('if (x) {y = 1;} else {z = 1;}')", "f('if (x) {y = 1;} else {z = 1;}')", "f('if (x) {y = 1;} else {z = 1;}')", "f('if (x) {y = 1;} else {z = 1;}')", "f('if (x) {y = 1;} else {z = 1;}')", "f('if (x) {y = 1;} else {z = 1;}')", "f('if (x) {y = 1;} else {z = 1;}')", "f('if (x) {y = 1;} else {z = 1;}')", "f('if (x) {y = 1;} else {z = 1;}')"], 179: ['f("Hello, world!")', 'f("Hello, world!")', 'f("Hello, world!")', 'f("Hello, world!")', 'f("Hello, world!")', 'f("Hello, world!")', 'f("Hello, world!")', 'f("Hello, world!")', 'f("Hello, world!")', 'f("Hello, world!")'], 180: ['f("a (b) c")', 'f("a (b) c")', "f('(hello world)')", 'f("a (b) c")', 'f("(hello world)")', 'f("a (b) c")', 'f("(hello world)")', 'f("(hello world)")', 'f("a (b) c")', 'f("(hello world)")'], 181: ["f('r;r;r;r;r;r;r;r;', ';')", "f('r;r;r;r;r;r;r;r;', ';')", "f('r;r;r;r;r;r;r;r;', ';')", "f('r;r;r;r;r;r;r;r;', ';')", "f('r;r;r;r;r;r;r;r;', ';')", "f('r;r;r;r;r;r;r;r;', ';')", "f('r;r;r;r;r;r;r;r;', ';')", "f('r;r;r;r;r;r;r;r;', ';')", "f('r;r;r;r;r;r;r;r;', ';')", "f('r;r;r;r;r;r;r;r;', ';')"], 182: ['f([1, 2, 3, 4, 5], 3)', 'f([1, 2, 3, 4, 5], 3)', 'f([1, 2, 3, 4, 5], 3)', 'f([1, 2, 3, 4, 5], 3)', 'f([1, 2, 3, 4, 5], 3)', 'f([1, 2, 3, 4, 5], 3)', 'f([1, 2, 3, 4, 5], 3)', 'f([1, 2, 3, 4, 5], 3)', 'f([1, 2, 3, 4, 5], 3)', 'f([1, 2, 3, 4, 5], 3)'], 183: ['f("apple,banana")', 'f("apple,banana")', 'f("apple,banana")', 'f("apple,banana")', 'f("apple,banana")', 'f("apple,banana")', 'f("apple,banana")', 'f("apple,banana")', 'f("apple,banana")', 'f("apple,banana")'], 184: ["f('jord', 'dlp')", "f('jord', 'dlp')", "f('jord', 'dlp')", "f('jord', 'dlp')", "f('jord', 'dlp')", "f('jord', 'dlp')", "f('jord', 'dlp')", "f('jord', 'dlp')", "f('jord', 'dlp')", "f('jord', 'dlp')"], 185: ["f('minimc@minimc.io')", "f('minimc@minimc.io')", "f('minimc@minimc.io')", "f('minimc@minimc.io')", "f('minimc@minimc.io')", "f('minimc@minimc.io')", "f('minimc@minimc.io')", "f('minimc@minimc.io')", "f('minimc@minimc.io')", "f('minimc@minimc.io')"], 186: ["f({'a': 123, 'b': 456})", "f({'a': 123, 'b': 456})", "f({'a': 123, 'b': 456})", "f({'a': 123, 'b': 456})", "f({'a': 123, 'b': 456})", "f({'a': 123, 'b': 456})", "f({'a': 123, 'b': 456})", "f({'a': 123, 'b': 456})", "f({'a': 123, 'b': 456})", "f({'a': 123, 'b': 456})"], 187: ["f('banana', 'a', '2')", "f('banana', 'a', '2')", "f('banana', 'a', '2')", "f('banana', 'a', '2')", "f('banana', 'a', '2')", "f('banana', 'a', '2')", "f('banana', 'a', '2')", "f('banana', 'a', '2')", "f('banana', 'a', '2')", "f('banana', 'a', '2')"], 188: ['f("banana", "a")', 'f("banana", "a")', 'f("banana", "a")', 'f("banana", "a")', 'f("banana", "a")', 'f("banana", "a")', 'f("banana", "a")', 'f("banana", "a")', 'f("banana", "a")', 'f("banana", "a")'], 189: ['f([1, 2, 3, 4, 5])', 'f([1, 2, 3, 4, 5])', 'f([1, 2, 3, 4, 5])', 'f([1, 2, 3, 4, 5])', 'f([1, 2, 3, 4, 5])', 'f([1, 2, 3, 4, 5])', 'f([1, 2, 3, 4, 5])', 'f([1, 2, 3, 4, 5])', 'f([1, 2, 3, 4, 5])', 'f([1, 2, 3, 4, 5])'], 190: ["f('this and cPanel')", "f('this and cPanel')", "f('this and cPanel')", "f('this and cPanel')", "f('this and cPanel')", "f('this and cPanel')", "f('this and cPanel')", "f('this and cPanel')", "f('this and cPanel')", "f('this and cPanel')"], 191: ['f([1, 2, 3, 4, 5], 2)', 'f([1, 2, 3, 4, 5], 2)', 'f([1, 2, 3, 4, 5], 2)', 'f([1, 2, 3, 4, 5], 2)', 'f([1, 2, 3, 4, 5], 2)', 'f([1, 2, 3, 4, 5], 2)', 'f([1, 2, 3, 4, 5], 2)', 'f([1, 2, 3, 4, 5], 2)', 'f([1, 2, 3, 4, 5], 2)', 'f([1, 2, 3, 4, 5], 2)'], 192: ['f(23, "Cornareti")', 'f(23, "Cornareti")', 'f(23, "Cornareti")', 'f(23, "Cornareti")', 'f(23, "Cornareti")', 'f(23, "Cornareti")', 'f(23, "Cornareti")', 'f(23, "Cornareti")', 'f(23, "Cornareti")', 'f(23, "Cornareti")'], 193: ["f({1: 'a', 2: 'b', 3: 'c', 4: 'd'})", "f({1: 'a', 2: 'b', 3: 'c', 4: 'd'})", "f({1: 'a', 2: 'b', 3: 'c', 4: 'd'})", "f({1: 'a', 2: 'b', 3: 'c', 4: 'd'})", "f({1: 'a', 2: 'b', 3: 'c', 4: 'd'})", "f({1: 'a', 2: 'b', 3: 'c', 4: 'd'})", "f({1: 'a', 2: 'b', 3: 'c', 4: 'd'})", "f({1: 'a', 2: 'b', 3: 'c', 4: 'd'})", "f({1: 'a', 2: 'b', 3: 'c', 4: 'd'})", "f({1: 'a', 2: 'b', 3: 'c', 4: 'd'})"], 194: ["f(['avc  a .d e', 'abc  b .d e', 'xyz  x .d e'], ' .d')", "f(['avc  a .d e', 'abc  b .d e', 'xyz  x .d e'], 'd')", "f(['avc  a .d e', 'abc  b .d e', 'xyz  x .d e'], ' .d')", "f(['avc  a .d e', 'abc  b .d e', 'xyz  x .d e'], 'd')", "f(['avc  a .d e', 'abc  b .d e', 'xyz  x .d e'], ' .d e')", "f(['avc  a .d e', 'abc  b .d e', 'xyz  x .d e'], 'd')", "f(['avc  a .d e', 'abc  b .d e', 'xyz  x .d e'], 'd')", "f(['avc  a .d e', 'abc  b .d e', 'xyz  x .d e'], 'd')", "f(['avc  a .d e', 'abc  b .d e', 'xyz  x .d e'], ' .d e')", "f(['avc  a .d e', 'abc  b .d e', 'xyz  x .d e'], ' .d')"], 195: ['f([1, 2, 2, 3, 3, 3])', 'f([1, 2, 2, 3, 3, 3])', 'f([1, 2, 2, 3, 3, 3])', 'f([1, 2, 2, 3, 3, 3])', 'f([1, 2, 2, 3, 3, 3])', 'f([1, 2, 2, 3, 3, 3])', 'f([1, 2, 2, 3, 3, 3])', 'f([1, 2, 2, 3, 3, 3])', 'f([1, 2, 2, 3, 3, 3])', 'f([1, 2, 2, 3, 3, 3])'], 196: ['f("hello world")', 'f("hello world")', 'f("hello world")', 'f("hello world")', 'f("hello world")', 'f("hello world")', 'f("hello world")', 'f("hello world")', 'f("hello world")', 'f("hello world")'], 197: ["f('banana', 2)", "f('banana', 2)", "f('banana', 2)", "f('banana', 2)", "f('banana', 2)", "f('banana', 2)", "f('banana', 2)", "f('banana', 2)", "f('banana', 2)", "f('banana', 2)"], 198: ["f({'a': 1, 'b': 2})", "f({'a': 1, 'b': 2})", "f({'a': 1, 'b': 2})", "f({'a': 1, 'b': 2})", "f({'a': 1, 'b': 2})", "f({'a': 1, 'b': 2})", "f({'a': 1, 'b': 2})", "f({'a': 1, 'b': 2})", "f({'a': 1, 'b': 2})", "f({'a': 1, 'b': 2})"], 199: ["f(['a', 'b'], ['car', 'dog'])", "f(['a', 'b'], ['car', 'dog'])", "f(['a', 'b'], ['car', 'dog'])", "f(['a', 'b'], ['car', 'dog'])", "f(['a', 'b'], ['car', 'dog'])", "f(['a', 'b'], ['car', 'dog'])", "f(['a', 'b'], ['car', 'dog'])", "f(['a', 'b'], ['car', 'dog'])", "f(['a', 'b'], ['car', 'dog'])", "f(['a', 'b'], ['car', 'dog'])"]})
generations were saved at model_generations_raw/WizardLM/WizardCoder-15B-V1.0_temp0.01_input/shard_0.json
generations were saved at model_generations_raw/WizardLM/WizardCoder-15B-V1.0_temp0.01_input/shard_0_raw.json
INFO 10-24 12:36:29 multiproc_worker_utils.py:133] Terminating local vLLM worker processes
[1;36m(VllmWorkerProcess pid=3961145)[0;0m INFO 10-24 12:36:29 multiproc_worker_utils.py:240] Worker exiting
[rank0]:[W1024 12:36:31.531245347 ProcessGroupNCCL.cpp:1168] Warning: WARNING: process group has NOT been destroyed before we destruct ProcessGroupNCCL. On normal program exit, the application should call destroy_process_group to ensure that any pending NCCL operations have finished in this process. In rare cases this process can exit before this point and block the progress of another member of the process group. This constraint has always been present,  but this warning has only been added since PyTorch 2.4 (function operator())
/usr/lib/python3.10/multiprocessing/resource_tracker.py:224: UserWarning: resource_tracker: There appear to be 1 leaked shared_memory objects to clean up at shutdown
  warnings.warn('resource_tracker: There appear to be %d '
+ (( i++ ))
+ (( i<1 ))
+ bash -x ./scripts/run_output_prediction.sh
+ tee output.log
+ models=("WizardLM/WizardCoder-15B-V1.0")
+ temperatures=(0.01)
+ (( i=0 ))
+ (( i<1 ))
+ model=WizardLM/WizardCoder-15B-V1.0
+ base_dir=WizardLM/WizardCoder-15B-V1.0
+ echo WizardLM/WizardCoder-15B-V1.0
WizardLM/WizardCoder-15B-V1.0
+ for temperature in "${temperatures[@]}"
+ dir=WizardLM/WizardCoder-15B-V1.0_temp0.01_input
+ dir=WizardLM/WizardCoder-15B-V1.0_temp0.01_input
+ SIZE=800
+ GPUS=2
+ echo WizardLM/WizardCoder-15B-V1.0_temp0.01_input
WizardLM/WizardCoder-15B-V1.0_temp0.01_input
+ mkdir -p model_generations_raw/WizardLM/WizardCoder-15B-V1.0_temp0.01_input
+ string='Starting iteration 0 with start and end  $(($i*SIZE/GPUS)) $(($ip*SIZE/GPUS))'
+ echo '$string'
$string
+ python3 main.py --model WizardLM/WizardCoder-15B-V1.0 --use_auth_token --trust_remote_code --tasks output_prediction --batch_size 10 --n_samples 1 --max_length_generation 1024 --precision bf16 --temperature 0.01 --save_generations --save_generations_path model_generations_raw/WizardLM/WizardCoder-15B-V1.0_temp0.01_input/shard_0.json --shuffle --tensor_parallel_size 2
WARNING 10-24 12:36:35 cuda.py:22] You are using a deprecated `pynvml` package. Please install `nvidia-ml-py` instead, and make sure to uninstall `pynvml`. When both of them are installed, `pynvml` will take precedence and cause errors. See https://pypi.org/project/pynvml for more information.
WARNING 10-24 12:36:38 config.py:1668] Casting torch.float16 to torch.bfloat16.
INFO 10-24 12:36:42 config.py:905] Defaulting to use mp for distributed inference
INFO 10-24 12:36:42 llm_engine.py:237] Initializing an LLM engine (v0.6.3.post1) with config: model='WizardLM/WizardCoder-15B-V1.0', speculative_config=None, tokenizer='WizardLM/WizardCoder-15B-V1.0', skip_tokenizer_init=False, tokenizer_mode=auto, revision=None, override_neuron_config=None, rope_scaling=None, rope_theta=None, tokenizer_revision=None, trust_remote_code=True, dtype=torch.bfloat16, max_seq_len=4096, download_dir=None, load_format=LoadFormat.AUTO, tensor_parallel_size=2, pipeline_parallel_size=1, disable_custom_all_reduce=False, quantization=None, enforce_eager=False, kv_cache_dtype=auto, quantization_param_path=None, device_config=cuda, decoding_config=DecodingConfig(guided_decoding_backend='outlines'), observability_config=ObservabilityConfig(otlp_traces_endpoint=None, collect_model_forward_time=False, collect_model_execute_time=False), seed=0, served_model_name=WizardLM/WizardCoder-15B-V1.0, num_scheduler_steps=1, chunked_prefill_enabled=False multi_step_stream_outputs=True, enable_prefix_caching=False, use_async_output_proc=True, use_cached_outputs=False, mm_processor_kwargs=None)
WARNING 10-24 12:36:43 multiproc_gpu_executor.py:53] Reducing Torch parallelism from 12 threads to 1 to avoid unnecessary CPU contention. Set OMP_NUM_THREADS in the external environment to tune this value as needed.
INFO 10-24 12:36:43 custom_cache_manager.py:17] Setting Triton cache manager to: vllm.triton_utils.custom_cache_manager:CustomCacheManager
[1;36m(VllmWorkerProcess pid=3974365)[0;0m INFO 10-24 12:36:43 multiproc_worker_utils.py:215] Worker ready; awaiting tasks
INFO 10-24 12:36:44 utils.py:1008] Found nccl from library libnccl.so.2
INFO 10-24 12:36:44 pynccl.py:63] vLLM is using nccl==2.20.5
[1;36m(VllmWorkerProcess pid=3974365)[0;0m INFO 10-24 12:36:44 utils.py:1008] Found nccl from library libnccl.so.2
[1;36m(VllmWorkerProcess pid=3974365)[0;0m INFO 10-24 12:36:44 pynccl.py:63] vLLM is using nccl==2.20.5
[1;36m(VllmWorkerProcess pid=3974365)[0;0m INFO 10-24 12:36:44 custom_all_reduce_utils.py:242] reading GPU P2P access cache from /home/yang/.cache/vllm/gpu_p2p_access_cache_for_0,1,2.json
INFO 10-24 12:36:44 custom_all_reduce_utils.py:242] reading GPU P2P access cache from /home/yang/.cache/vllm/gpu_p2p_access_cache_for_0,1,2.json
WARNING 10-24 12:36:44 custom_all_reduce.py:141] Custom allreduce is disabled because your platform lacks GPU P2P capability or P2P test failed. To silence this warning, specify disable_custom_all_reduce=True explicitly.
[1;36m(VllmWorkerProcess pid=3974365)[0;0m WARNING 10-24 12:36:44 custom_all_reduce.py:141] Custom allreduce is disabled because your platform lacks GPU P2P capability or P2P test failed. To silence this warning, specify disable_custom_all_reduce=True explicitly.
INFO 10-24 12:36:44 shm_broadcast.py:241] vLLM message queue communication handle: Handle(connect_ip='127.0.0.1', local_reader_ranks=[1], buffer=<vllm.distributed.device_communicators.shm_broadcast.ShmRingBuffer object at 0x7a627dfc3790>, local_subscribe_port=37787, remote_subscribe_port=None)
INFO 10-24 12:36:44 model_runner.py:1056] Starting to load model WizardLM/WizardCoder-15B-V1.0...
[1;36m(VllmWorkerProcess pid=3974365)[0;0m INFO 10-24 12:36:44 model_runner.py:1056] Starting to load model WizardLM/WizardCoder-15B-V1.0...
INFO 10-24 12:36:45 weight_utils.py:243] Using model weights format ['*.bin']
Loading pt checkpoint shards:   0% Completed | 0/1 [00:00<?, ?it/s]
/home/yang/.local/lib/python3.10/site-packages/vllm/model_executor/model_loader/weight_utils.py:425: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  state = torch.load(bin_file, map_location="cpu")
[1;36m(VllmWorkerProcess pid=3974365)[0;0m INFO 10-24 12:36:45 weight_utils.py:243] Using model weights format ['*.bin']
[1;36m(VllmWorkerProcess pid=3974365)[0;0m /home/yang/.local/lib/python3.10/site-packages/vllm/model_executor/model_loader/weight_utils.py:425: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
[1;36m(VllmWorkerProcess pid=3974365)[0;0m   state = torch.load(bin_file, map_location="cpu")
Loading pt checkpoint shards: 100% Completed | 1/1 [00:38<00:00, 38.02s/it]
Loading pt checkpoint shards: 100% Completed | 1/1 [00:38<00:00, 38.02s/it]

[1;36m(VllmWorkerProcess pid=3974365)[0;0m INFO 10-24 12:37:23 model_runner.py:1067] Loading model weights took 14.5980 GB
INFO 10-24 12:37:23 model_runner.py:1067] Loading model weights took 14.5980 GB
INFO 10-24 12:37:26 distributed_gpu_executor.py:57] # GPU blocks: 18219, # CPU blocks: 13107
INFO 10-24 12:37:26 distributed_gpu_executor.py:61] Maximum concurrency for 4096 tokens per request: 71.17x
[1;36m(VllmWorkerProcess pid=3974365)[0;0m INFO 10-24 12:37:27 model_runner.py:1395] Capturing the model for CUDA graphs. This may lead to unexpected consequences if the model is not static. To run the model in eager mode, set 'enforce_eager=True' or use '--enforce-eager' in the CLI.
[1;36m(VllmWorkerProcess pid=3974365)[0;0m INFO 10-24 12:37:27 model_runner.py:1399] CUDA graphs can take additional 1~3 GiB memory per GPU. If you are running out of memory, consider decreasing `gpu_memory_utilization` or enforcing eager mode. You can also reduce the `max_num_seqs` as needed to decrease memory usage.
INFO 10-24 12:37:27 model_runner.py:1395] Capturing the model for CUDA graphs. This may lead to unexpected consequences if the model is not static. To run the model in eager mode, set 'enforce_eager=True' or use '--enforce-eager' in the CLI.
INFO 10-24 12:37:27 model_runner.py:1399] CUDA graphs can take additional 1~3 GiB memory per GPU. If you are running out of memory, consider decreasing `gpu_memory_utilization` or enforcing eager mode. You can also reduce the `max_num_seqs` as needed to decrease memory usage.
[1;36m(VllmWorkerProcess pid=3974365)[0;0m INFO 10-24 12:37:48 model_runner.py:1523] Graph capturing finished in 20 secs.
INFO 10-24 12:37:48 model_runner.py:1523] Graph capturing finished in 20 secs.
  0%|          | 0/200 [00:00<?, ?it/s]  0%|          | 1/200 [00:01<05:15,  1.59s/it]  1%|          | 2/200 [00:02<04:07,  1.25s/it]  2%|▏         | 3/200 [00:04<04:46,  1.45s/it]  2%|▏         | 4/200 [00:07<06:35,  2.02s/it]  2%|▎         | 5/200 [00:07<04:47,  1.47s/it]  3%|▎         | 6/200 [00:08<03:42,  1.15s/it]