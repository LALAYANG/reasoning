{"sample_0": ["[/Code]"], "sample_1": ["[/Code]"], "sample_2": ["[/THOUGHT]"], "sample_3": ["[/Code]"], "sample_4": ["[/THOUGHT]"], "sample_5": ["```"], "sample_6": ["import java.util.ArrayList ; import java.util.List ; public class codeforces_281_A { public static void main ( String [ ] args ) { List < String > list = new ArrayList < > ( ) ; list.add ( \"jojo\" ) ; list.add ( \"Ja\" ) ; list.add ( \"Ja\" ) ; list.add ( \"Ja\" ) ; list.add ( \"Ja\" ) ; list.add ( \"Ja\" ) ; list.add ( \"Ja\" ) ; list.add ( \"Ja\" ) ; list.add ( \"Ja\" ) ; list.add ( \"Ja\" ) ; list.add ( \"Ja\" ) ; list.add ( \"Ja\" ) ; list.add ( \"Ja\" ) ; list.add ( \"Ja\" ) ; list.add ( \"Ja\" ) ; list.add ( \"Ja\" ) ; list.add ( \"Ja\" ) ; list.add ( \"Ja\" ) ; list.add ( \"Ja\" ) ; list.add ( \"Ja\" ) ; list.add ( \"Ja\" ) ; list.add ( \"Ja\" ) ; list.add ( \"Ja\" ) ; list.add ( \"Ja\" ) ; list.add ( \"Ja\" ) ; list.add ( \"Ja\" ) ; list.add ( \"Ja\" ) ; list.add ( \"Ja\" ) ; list.add ( \"Ja\" ) ; list.add ( \"Ja\" ) ; list.add ( \"Ja\" ) ; list.add ( \"Ja\" ) ; list.add ( \"Ja\" ) ; list.add ( \"Ja\" ) ; list.add ( \"Ja\" ) ; list.add ( \"Ja\" ) ; list.add ( \"Ja\" ) ; list.add ( \"Ja\" ) ; list.add ( \"Ja\" ) ; list.add ( \"Ja\" ) ; list.add ( \"Ja\" ) ; list.add ( \"Ja\" ) ; list.add ( \"Ja\" ) ; list.add ( \"Ja\" ) ; list.add ( \"Ja\" ) ; list.add ( \"Ja\" ) ; list.add ( \"Ja\" ) ; list.add ( \"Ja\" ) ; list.add ( \"Ja\" ) ; list.add ( \"Ja\" ) ; list.add ( \"Ja\" ) ; list.add ( \"Ja\" ) ; list.add ( \"Ja\" ) ; list.add ( \"Ja\" ) ; list.add ( \"Ja\" ) ; list.add ( \"Ja\" ) ; list.add ( \"Ja\" ) ; list.add ( \"Ja\" ) ; list.add ( \"Ja\" ) ; list.add ( \"Ja\" ) ; list.add ( \"Ja\" ) ; list.add ( \"Ja\" ) ; list.add ( \"Ja\" ) ; list.add ( \"Ja\" ) ; list.add ( \"Ja\" ) ; list.add ( \"Ja\" ) ; list.add ( \"Ja\" ) ; list.add ( \"Ja\" ) ; list.add ( \"Ja\" ) ; list.add ( \"Ja\" ) ; list.add ( \"Ja\" ) ; list.add ( \"Ja\" ) ; list.add ( \"Ja\" ) ; list.add ( \"Ja\" ) ; list.add ( \"Ja\" ) ; list.add ( \"Ja\" ) ; list.add ( \"Ja\" ) ; list.add ( \"Ja\" ) ; list.add ( \"Ja\" ) ; list.add ( \"Ja\" ) ; list.add ( \"Ja\" ) ; list.add ( \"Ja\" ) ; list.add ( \"Ja\" ) ; list.add ( \"Ja\" ) ; list.add ( \"Ja\" ) ; list.add ( \"Ja\" ) ; list.add ( \"Ja\" ) ; list.add ( \"Ja\" ) ; list.add ( \"Ja\" ) ; list.add ( \"Ja\" ) ; list.add ( \"Ja\" ) ; list.add ( \"Ja\" ) ; list.add ( \"Ja\" ) ; list.add ( \"Ja\" ) ; list.add ( \"Ja"], "sample_7": ["[/Code]"], "sample_8": ["[/THOUGHT]"], "sample_9": ["[/Code]"], "sample_10": ["'ha'"], "sample_11": ["['123', '23', '3', '', '1', '2', '3', '12', '23', '3', '123', '23', '3', '123', '23', '3', '123', '23', '3', '123', '23', '3', '123', '23', '3', '123', '23', '3', '123', '23', '3', '123', '23', '3', '123', '23', '3', '123', '23', '3', '123', '23', '3', '123', '23', '3', '123', '23', '3', '123', '23', '3', '123', '23', '3', '123', '23', '3', '123', '23', '3', '123', '23', '3', '123', '23', '3', '123', '23', '3', '123', '23', '3', '123', '23', '3', '123', '23', '3', '123', '23', '3', '123', '23', '3', '123', '23', '3', '123', '23', '3', '123', '23', '3', '123', '23', '3', '123', '23', '3', '123', '23', '3', '123', '23', '3', '123', '23', '3', '123', '23', '3', '123', '23', '3', '123', '23', '3', '123', '23', '3', '123', '23', '3', '123', '23', '3', '123', '23', '3', '123', '23', '3', '123', '23', '3', '123', '23', '3', '123', '23', '3', '123', '23', '3', '123', '23', '3', '123', '23', '3', '123', '23', '3', '123', '23', '3', '123', '23', '3', '123', '23', '3', '123', '23', '3', '123', '23', '3', '123', '23', '3', '123', '23', '3', '123', '23', '3', '123', '23', '3', '123', '23', '3', '123', '23', '3', '123', '23', '3', '123', '23', '3', '123', '23', '3', '123', '23', '3', '123', '23', '3', '123', '23', '3', '123', '23', '3', '123', '23', '3', '123', '23', '3', '123', '23', '3', '123', '23', '3', '123', '23', '3', '123', '23', '3', '123', '23', '3', '123', '23', '3', '123', '23', '3', '123', '23', '3', '123', '23', '3', '123', '23', '3', '123', '23', '3', '123', '23', '3', '123', '2"], "sample_12": ["```"], "sample_13": ["[/THOUGHT]"], "sample_14": ["</Code>"], "sample_15": ["</Code>"], "sample_16": ["return True"], "sample_17": ["}```"], "sample_18": ["[/THOUGHT]"], "sample_19": ["[/THOUGHT]"], "sample_20": ["[/THOUGHT]"], "sample_21": ["import java.util.* ; public class codeforces_41_B { public static void main ( String [ ] args ) { Scanner in = new Scanner ( System.in ) ; String s1 = in.next ( ) ; String s2 = in.next ( ) ; int length = s1.length ( ) ; for ( int i = length - 1 ; i >= 0 ; i -- ) { if ( s1.endsWith ( s2 ) ) { System.out.println ( length + i ) ; return ; } s1 = s1 + s1.charAt ( 0 ) ; s1 = s1.substring ( 1 ) ; } System.out.println ( length * 2 ) ; } }```"], "sample_22": ["[/THOUGHT]"], "sample_23": ["[/Code]"], "sample_24": ["assert f('wW\uc758IV]HDJjhgK[dGIUlVO@Ess$coZkBqu[Ct') == False```"], "sample_25": ["</Code>"], "sample_26": ["[/Code]"], "sample_27": ["10```"], "sample_28": ["[/Code]"], "sample_29": ["[/Code]"], "sample_30": ["[/THOUGHT]"], "sample_31": ["```"], "sample_32": ["[49, 28, 1]"], "sample_33": ["```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```java```"], "sample_34": ["[/THOUGHT]"], "sample_35": ["[/Code]"], "sample_36": ["[]</Code>"], "sample_37": ["[1, 1]"], "sample_38": ["</Code>"], "sample_39": ["[/THOUGHT]"], "sample_40": ["import java.util.* ; public class codeforces_287_A { public static void main ( String [ ] args ) { Scanner in = new Scanner ( System.in ) ; while ( in.hasNext ( ) ) { int n = in.nextInt ( ) ; int m = in.nextInt ( ) ; for ( int i = 0 ; i < n ; i ++ ) { StringBuilder sb = new StringBuilder ( ) ; for ( int j = 0 ; j < m ; j ++ ) { sb.append ( in.nextInt ( ) ) ; } String s = sb.toString ( ) ; int idx = s.indexOf ( \"1\" ) ; if ( idx >= 0 ) { System.out.println ( Math.abs ( i - n / 2 ) + Math.abs ( idx / m - m / 2 ) ) ; } } } } }```"], "sample_41": ["</Code>"], "sample_42": ["{}, {}"], "sample_43": ["[/THOUGHT]"], "sample_44": ["[/THOUGHT]"], "sample_45": ["[1, 7, 1, 2, 6, 0, 2]"], "sample_46": ["[/Code]"], "samplesample_48": ["[/Code]"], "sample_49": ["[/Code]"], "sample_50": ["[/THOUGHT]"], "sample_51": ["[/Code]"], "sample_52": ["{'a': 3, 'b': -1, 'c': 'Dum'}"], "sample_53": ["import java.util.Scanner ; public class codeforces_269_A { public static void main ( String [ ] args ) { Scanner scan = new Scanner ( System.in ) ; int n = scan.nextInt ( ) ; String s = scan.next ( ) ; String t = scan.next ( ) ; int count = 0 ; for ( int i = 0 ; i < n ; i ++ ) { if ( s.charAt ( i ) != t.charAt ( i ) ) { count ++ ; } } if ( count % 2 == 1 ) { System.out.println ( \"NO\" ) ; } else { System.out.println ( \"YES\" ) ; } } }```"], "sample_54": ["[/Code]"], "sample_55": ["[/THOUGHT]"], "sample_56": ["['mA', 'Lk']"], "sample_57": ["<Code>"], "sample_58": ["[/THOUGHT]"], "sample_59": ["[/THOUGHT]"], "sample_60": ["</Code>"], "sample_61": ["[1, 2, 4, 5, 3, 6]"], "sample_62": ["[/THOUGHT]"], "sample_63": ["[/THOUGHT]"], "sample_64": ["</Code>"], "sample_65": ["</Code>"], "sample_66": ["```"], "sample_67": ["</Code>"], "sample_68": ["import java.util.* ; public class codeforces_267_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int t = sc.nextInt ( ) ; while ( t -- > 0 ) { String s = sc.next ( ) ; char ch = sc.next ( ).charAt ( 0 ) ; int count = 0 ; for ( int i = 0 ; i < s.length ( ) ; i ++ ) { if ( s.charAt ( i ) == ch ) { count ++ ; }"], "sample_69": ["[/THOUGHT]"], "sample_70": ["'wdeejjjzsjsjjsxjjneddaddddddefsfd'"], "sample_71": ["[/Code]"], "sample_72": ["[/THOUGHT]"], "sample_73": ["[/THOUGHT]"], "sample_74": ["[/THOUGHT]"], "sample_75": ["[/THOUGHT]"], "sample_76": ["[-1, 7, 1, -3]"], "sample_77": [""], "sample_78": ["[/THOUGHT]"], "sample_79": ["[/Code]"], "sample_80": ["[/THOUGHT]"], "sample_81": ["[/Code]"], "sample_82": ["[/Code]"], "sample_83": ["[1, 2]"], "sample_84": ["[/THOUGHT]"], "sample_85": ["```"], "sample_86": ["'mRcwVqXsRDRb'"], "sample_87": ["assert f('     i') == True"], "sample_88": ["[/THOUGHT]"], "sample_89": ["[0, 0, 1, 2, 1]"], "sample_90": ["[/THOUGHT]"], "sample_91": ["'asfdellos'\n'Ta'\n'asfdellos'\n'Ta'\n'os'"], "sample_92": ["[/THOUGHT]"], "sample_93": ["import java.util.* ; public class codeforces_267_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; String [ ] str = new String [ n ] ; int [ ] x = new int [ n ] ; int [ ] y = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { str [ i ] = sc.next ( ) ; x [ i ] = sc.nextInt ( ) ; y [ i ] = sc.nextInt ( ) ; } int count = 0 ; for ( int i = 0 ; i < n ; i ++ ) { count = 0 ; for ( int j = 0 ; j < n ; j ++ ) { if ( x [ i ] == x [ j ] && y [ i ] == y [ j ] && str [ i ].equals ( str [ j ] ) && i != j ) { count ++ ; break ; } } if ( count == 1 ) { System.out.println ( \"YES\" ) ; return ; } } System.out.println ( \"NO\" ) ; } }```"], "sample_94": ["[/THOUGHT]"], "sample_95": ["[/THOUGHT]"], "sample_96": ["import java.util.Scanner ; public class codeforces_28_B { public static void main ( String [ ] args ) { Scanner scan = new Scanner ( System.in ) ; String str = scan.next ( ) ; String sub = scan.next ( ) ; int length = sub.length ( ) ; int index = 0 ; int counter = 0 ; while ( true ) { index = str.indexOf ( sub , index ) ; if ( index != - 1 ) { counter ++ ; index += length ; } else { break ; } } System.out.println ( counter ) ; } }```"], "sample_97": ["[/Code]"], "sample_98": ["'r'"], "sample_99": ["[/THOUGHT]"], "sample_100": ["[/THOUGHT]"], "sample_101": ["'mmfb'"], "sample_102": ["[/Code]"], "sample_103": ["</Code>"], "sample_104": ["[/THOUGHT]"], "sample_105": ["'coscifysu'"], "sample_106": ["[/Code]"], "sample_107": ["assert f('1') == False"], "sample_108": ["</Code>"], "sample_109": ["[3, 1, 7]"], "sample_110": ["[/THOUGHT]"], "sample_111": ["[/Code]"], "sample_112": [""], "sample_113": ["[/THOUGHT]"], "sample_114": ["[/THOUGHT]"], "sample_115": ["[/THOUGHT]"], "sample_116": ["'a1234\u00e5r'"], "samplesample_118": ["[/Code]"], "sample_119": ["[/THOUGHT]"], "sample_120": ["[/THOUGHT]"], "sample_121": ["[/Code]"], "sample_122": ["[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]"], "sample_123": ["{1: 0, 2: 1, 3: 2, 4: 3, 5: 4}"], "sample_124": ["'ekw'"], "sample_125": ["</Code>"], "sample_126": ["[[1, 2, 3], [1, 2, 3, 1, 2, 3]]"], "sample_127": ["import java.util.* ; public class codeforces_170_A { public static void main ( String args [ ] ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; String a = \"\" + n ; int count = 0 ; for ( int i = 0 ; i"], "sample_128": ["[/Code]"], "sample_129": ["[/Code]"], "sample_130": ["</Code>"], "sample_131": ["import java.util.* ; public class codeforces_61_B { public static void main ( String [ ] args ) { Scanner in = new Scanner ( System.in ) ; String word = in.next ( ) ; String part = in.next ( ) ; int length = part.length ( ) ; StringBuilder dup = new StringBuilder ( ) ; for ( int i = 0 ; i < word.length ( ) ; i ++ ) { dup.append ( part ) ; if ( word.startsWith ( dup.toString ( ) ) ) { break ; } } int idx = dup.toString ( ).indexOf ( word ) ; System.out.println ( dup.toString ( ).substring ( idx + length ) ) ; } }```"], "sample_132": ["[[1, 1, 1, 1]]"], "sample_133": ["[-5, 3, 9999, 1, 0, 2]"], "sample_134": ["[/THOUGHT]"], "sample_135": ["[1, 2]"], "sample_136": ["[/THOUGHT]"], "sample_137": ["[{'pos': 'pos'}]"], "sample_138": ["{'R': 0, 'T': -3, 'F': 6, 'K': 0}</Code>"], "sample_139": ["[/THOUGHT]"], "sample_140": ["[/Code]"], "sample_141": ["[/Code]"], "sample_142": ["import java.util.* ; public class codeforces_286_B { public static void main ( String [ ] args ) { Scanner in = new Scanner ( System.in ) ; String s = in.next ( ) ; char c = in.next ( ).charAt ( 0 ) ; int n = s.length ( ) ; for ( int i = 0 ; i < n ; i ++ ) { if ( s.charAt ( i ) == c ) { System.out.println ( i ) ; return ; } } } }```"], "sample_143": ["([0, 0, 0, 0, 0, 0, 0, 0, 0], [6, 3, 1, 7, 4, 8, 2, 9, 5])"], "sample_144": ["[3, 11]"], "sample_145": ["[/THOUGHT]"], "sample_146": ["[/THOUGHT]"], "sample_147": ["[/Code]"], "sample_148": ["<Code>"], "sample_149": ["[/THOUGHT]"], "sample_150": ["'i'"], "sample_151": ["[/Code]"], "sample_152": ["[/Code]"], "sample_153": ["'a'"], "sample_154": ["[/THOUGHT]"], "sample_155": ["import java.util.* ; public class Solution { public int solve ( int [ ] nums , int target ) { for ( int i = 0 ; i < nums.length ; i ++ ) { if ( nums [ i ] == target ) return i ; } return - 1 ; } }```"], "sample_156": ["</Code>"], "sample_157": ["<Code>"], "sample_158": ["</Code>"], "sample_159": ["[/Code]"], "sample_160": ["\"Djhasghasgdha\""], "sample_161": ["import java.util.* ; public class codeforces_284_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; ArrayList < String > list = new ArrayList < > ( ) ; for ( int i = 0 ; i < n ; i ++ ) { list.add ( sc.next ( ) ) ; } for ( int i = 0 ; i < n ; i ++ ) { StringBuilder sb = new StringBuilder ( ) ; sb.append ( list.get ( i ).charAt ( 0 ) ) ; sb.append ( list.get ( i ).charAt ( 1 ) ) ; sb.append ( list.get ( i ).charAt ( list.get ( i ).length ( ) - 3 ) ) ; sb.append ( list.get ( i ).charAt ( list.get ( i ).length ( ) - 2 ) ) ; sb.append ( list.get ( i ).charAt ( list.get ( i ).length ( ) - 1 ) ) ; list.set ( i , sb.toString ( ) ) ; } int c = 0 ; for ( int i = 0 ; i < n ; i"], "sample_162": ["```"], "sample_163": ["[/THOUGHT]"], "sample_164": ["[/Code]"], "sample_165": ["[/Code]"], "sample_166": ["[1]"], "sample_167": ["[/Code]"], "sample_168": ["import java.util.* ; public class codeforces_271_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int x = sc.nextInt ( ) ; int y = sc.nextInt ( ) ; int z = sc.nextInt ( ) ; if ( ( x == y && x != z ) || ( x == z && x != y ) || ( y == z && y != x ) ) { System.out.println ( \"1\" ) ; } else if ( x == y && y == z ) { System.out.println ( \"3\" ) ; } else { System.out.println ( \"2\" ) ; } } }```"], "sample_169": ["</Code>"], "sample_170": ["[/THOUGHT]"], "sample_171": ["import java.util.* ; public class atcoder_ABC125_B { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; String S = sc.next ( ) ; int N = S.length ( ) ; int Q = 0 ; for ( int i = 1 ; i < N ; i ++ ) { for ( int j = i + 1 ; j < N ; j ++ ) { if ( S.charAt ( i ) == S.charAt ( j ) ) { int len = 0 ; for ( int k = i - 1 ; k >= 0 ; k -- ) { len ++ ; if ( S.charAt ( k ) != S.charAt ( i ) ) { break ; } } Q += len ; } } } System.out.println ( Q ) ; } }```"], "sample_172": ["import java.util.* ; public class codeforces_468_B { public static void main ( String [ ] args ) { Scanner scan = new Scanner ( System.in ) ; int n = scan.nextInt ( ) ; int k = scan.nextInt ( ) ; String str = scan.next ( ) ; int l = 0 ; for ( int i = 0 ; i < n ; i ++ ) { if ( str.charAt ( i ) == 'a' ) { l ++ ; } } int m = Math.min ( k , l ) ; int o = Math.min ( n - k , n - l ) ; System.out.println ( m + o ) ; } }```"], "sample_173": ["'undbs'"], "sample_174": ["[/THOUGHT]"], "sample_175": ["[/Code]"], "sample_176": ["[/THOUGHT]"], "sample_177": ["</Code>"], "sample_178": ["if (x) {y = 1;} else {z = 1;}```"], "sample_179": ["[/THOUGHT]"], "sample_180": ["'AbB'"], "sample_181": ["[/THOUGHT]"], "sample_182": ["```"], "sample_183": ["-6"], "sample_184": ["[/Code]"], "sample_185": ["[/THOUGHT]"], "sample_186": ["(('a', 123), ('c', 789))"], "sample_187": ["[/THOUGHT]"], "sample_188": ["[1]"], "sample_189": ["[1]"], "sample_190": ["[/THOUGHT]"], "sample_191": ["```python```"], "sample_192": ["[/Code]"], "sample_193": ["</Code>"], "sample_194": ["['avc  a .d e']"], "sample_195": ["[/THOUGHT]"], "sample_196": ["</Code>"], "sample_197": ["</Code>"], "sample_198": ["[/THOUGHT]"], "sample_199": ["[/Code]"]}